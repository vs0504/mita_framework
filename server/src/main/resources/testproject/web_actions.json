[
  {
    "id": 9104,
    "name": "Accept alert",
    "summary": "Accepts an alert by clicking on the 'OK' button of the alert",
    "guid": "22Nw5UqP7EGqvQhuHT2kqg",
    "description": "Accept alert",
    "className": "io.testproject.addons.web.alert.AcceptAlert",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9041,
    "name": "Add Cookie",
    "summary": "Adds a Cookie",
    "guid": "mUKelsyYlEyIcCGX8e0_fw",
    "description": "Add cookie {{name}}",
    "className": "io.testproject.addons.web.cookies.AddCookie",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 576,
    "name": "Addition",
    "guid": "tIBQPQAbckKIWaM_kAvBKQ",
    "description": "Add {{a}} to {{b}}",
    "className": "io.testproject.examples.sdk.actions.AdditionAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 8008,
    "name": "Angular Drag and Drop",
    "summary": "",
    "guid": "si0J_8voBEunDGsoI_I1GA",
    "description": "Run Angular Drag and Drop",
    "className": "io.testproject.DragWithOffset",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9309,
    "name": "Append values to a CSV file",
    "summary": "Appends new values to an existing CSV file",
    "guid": "0nn7vgrhd0e0szXKZvWP1A",
    "description": "Append values to CSV file",
    "className": "Actions.AppendTextToCSV",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7266,
    "name": "Are elements visible?",
    "summary": "check if provided elements are visible",
    "guid": "EMwQvYtYtku0OQep5AAq3g",
    "description": "Check if given elements are visible, delimit elements locatorsby newline.",
    "className": "io.testproject.addons.element.web.IsVisibleMultipleElementsWeb",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4695,
    "name": "Are given key-value pair unique in a JSON Array",
    "summary": "",
    "guid": "3SwrSJ88gkuZ8AIVGIgohA",
    "description": "Are key:{{key}} and value: {{value}} unique?",
    "className": "IsValueUnique",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 2817,
    "name": "Base64 Decode",
    "summary": "",
    "guid": "l_x5Nhqei0u2G9rdO90J1g",
    "description": "Decode string from Base64 and save to a file",
    "className": "DecodeAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 2820,
    "name": "Base64 Encode",
    "summary": "",
    "guid": "olKh2FpQiU-SZt5RscDqlQ",
    "description": "Encode string or file to Base64",
    "className": "EncodeAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 275,
    "name": "Change timeframe view",
    "summary": "Changes timeframe view to another (day, week, month...)",
    "guid": "A6J1vYnfvkyF-jyjL2YiCA",
    "description": "Change timeframe view to {{viewName}}",
    "className": "ChangeTimeFrameView",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9350,
    "name": "Check if all items in a web list element contain text",
    "guid": "Hfot_YXaPEOcBMUnCYPlnA",
    "description": "Checks if all items inside an HTML web list element contain specific text",
    "className": "Actions.AllItemsContainText",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 231,
    "name": "Checkbox checked ?",
    "summary": "Checks if a checkbox with specified title is checked",
    "guid": "VntlNLO-d0SB_HeXkSiy3g",
    "description": "Check if a checkbox with title '{{title}}' is checked",
    "className": "IsChecked",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9453,
    "name": "Clear {{element}} contents and type {{keys}}",
    "summary": "",
    "guid": "-G2kQ0SSqECMtfr1JGAdww",
    "description": "Run Clear {{element}} contents and type {{keys}}",
    "className": "io.testproject.addon.combined.actions.ClearAndTypeAction",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7,
    "name": "Clear contents",
    "summary": "Clears element contents (deletes any existing text)",
    "guid": "511ddb4e-210f-4f3f-9fb9-b766bb23ee6a",
    "description": "Clear {{element}} contents",
    "className": "io.testproject.agent.codeblocks.driver.element.ClearElement",
    "type": "Element",
    "source": "System",
    "labels": []
  },
  {
    "id": 9913,
    "name": "Clear contents (if visible)",
    "guid": "xWYLHslQSEqQxvVZ_g3Jqg",
    "description": "Clear the contents of {{element}} if it's visible",
    "className": "io.testproject.addon.ClearContentsActions.ClearContentsIfVisibleWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4180,
    "name": "Clear Fields",
    "summary": "",
    "guid": "TIhEdWCDqUuIbfJ0M4le-Q",
    "description": "Run Clear Fields",
    "className": "io.testproject.examples.sdk.actions.ClearFieldsAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9146,
    "name": "Clear local storage",
    "summary": "Clears local storage",
    "guid": "t66wECOE8U-l_phyrXXnrQ",
    "description": "Clear local storage",
    "className": "io.testproject.addons.web.localstorage.ClearLocalStorage",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9,
    "name": "Click",
    "summary": "Clicks an Element",
    "guid": "02d572b2-d610-4700-9ad3-40076ddb9807",
    "description": "Click {{element}}",
    "className": "io.testproject.agent.codeblocks.driver.element.ClickElement",
    "quickAction": true,
    "type": "Element",
    "source": "System",
    "labels": []
  },
  {
    "id": 7588,
    "name": "Click (Until Gone)",
    "summary": "",
    "guid": "uZ1se9CRMEGElJkuu_zIrw",
    "description": "Click {{element}} (Until Gone)",
    "className": "io.testproject.addons.element.ClickUntilHidden",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9302,
    "name": "Click (using JavaScript)",
    "summary": "",
    "guid": "c7OPWafS8kaFJUBVwrhoRw",
    "description": "Click {{element}}",
    "className": "io.testproject.addon.jsactions.ClickAction",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9362,
    "name": "Click a random item on the list",
    "summary": "",
    "guid": "jZRryO2ev0Sl1Bfo7qxjFA",
    "description": "Clicks a random value on the list",
    "className": "Actions.ClickOnRandomItem",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5540,
    "name": "Click and accept following JavaScript alert",
    "summary": "",
    "guid": "PfMwLM7lCUK2YR9bII8p0Q",
    "description": "Click an web element and accept the alert after",
    "className": "ClickAndAcceptAlert",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9131,
    "name": "Click and hold",
    "summary": "Clicks and holds the mouse button at the last known mouse coordinates",
    "guid": "XSnEHwk8N0SKUJlekF9Jlw",
    "description": "Click and hold",
    "className": "io.testproject.addons.web.actions.ClickAndHold",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10117,
    "name": "Click at coordinates with Robot",
    "summary": "Can be used to move mouse and click at coordinates",
    "guid": "uBrFN-EzwU2gxU3KXbmDWA",
    "description": "Clicks at {{x}},{{y}} coordinates",
    "className": "io.testproject.robot.operations.ClickAtCoordinates",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 216,
    "name": "Click dialog button",
    "summary": "Clicks dialog button",
    "guid": "gWVaxOXeJkiLluSRbMfm7w",
    "description": "Click button {{buttonText}}",
    "className": "ClickDialogButton",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9895,
    "name": "Click if visible",
    "guid": "U2veSbE9E0aIfg5GFB2HtQ",
    "description": "Click {{element}} if it's visible",
    "className": "io.testproject.addon.ClickActions.ClickIfVisibleWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 8194,
    "name": "Click multiple times",
    "guid": "CVDrbD0i3Eqth6shb2wVNA",
    "description": "Perform needed amount of click on element",
    "className": "io.testproject.MultiClicker",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 8013,
    "name": "Click on a given cell",
    "summary": "",
    "guid": "_3OtktvKEEGsJghdnvuiFQ",
    "description": "Click on {{Row}}, {{Column}}",
    "className": "Actions.ClickOnTableElementByIndexAction",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5518,
    "name": "Click On all Checkboxes",
    "summary": "",
    "guid": "pLNncEax_ESn8Ks6XSaVdQ",
    "description": "Clicking on all checkboxes",
    "className": "ClickOnAllCheckboxes",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9365,
    "name": "Click On an list item with a specific text",
    "summary": "",
    "guid": "W88GyL29kkWzE23nWOZc7Q",
    "description": "Clicks on a list item based on text",
    "className": "Actions.ClickOnListItemWhichContainsText",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 8028,
    "name": "Click on Checkbox in a given cell",
    "summary": "",
    "guid": "BMlaB4tE3kO2gD_sWI1QrQ",
    "description": "Click on {{Row}}, {{Column}}",
    "className": "Actions.ClickOnCheckboxInsideCell",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5467,
    "name": "Click on dynamic element",
    "summary": "Click on dynamic element",
    "guid": "bQ8mwVtUSUWR82ER9g1gUg",
    "description": "Click on dynamic element",
    "className": "DynamicClick",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 8010,
    "name": "Click on link at a given cell(row, column)",
    "summary": "",
    "guid": "FH0vR9fkek-3-XsQihToeA",
    "description": "Click on {{LinkText}} inside ({{Row}},{{Column}})",
    "className": "Actions.ClickOnLinkInsideTableByIndex",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5534,
    "name": "Click On N Checkboxes Randomly",
    "summary": "",
    "guid": "J24N3wcS6ku1Behd5-J2_A",
    "description": "Clicking On N Checkboxes Randomly",
    "className": "ClickOnNCheckboxesRandomly",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5522,
    "name": "Click On the First N Checkboxes",
    "summary": "",
    "guid": "Fln474oDXEmt9nMBkq3FKg",
    "description": "Clicking On the First N Checkboxes",
    "className": "ClickOnFirstNCheckboxes",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5530,
    "name": "Click On the Last N Checkboxes",
    "summary": "",
    "guid": "a503lOq1Gk6d61fstd7axg",
    "description": "Clicking On the Last N Checkboxes",
    "className": "ClickOnLastNCheckboxes",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9353,
    "name": "Click on the Nth item in a web element",
    "guid": "efok7APzekeHGSSTd_H1HQ",
    "description": "Clicks on the Nth item inside a web list element",
    "className": "Actions.ClickOnNthItem",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 212,
    "name": "Click section by index",
    "summary": "Clicks section found by it's index",
    "guid": "6tTZSFYDC0a1w_tvQ4YQ6Q",
    "description": "Clicks accordion section with index {{sectionIndex}}",
    "className": "ClickSectionByIndex",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 209,
    "name": "Click section by title",
    "summary": "Clicks section found by it's title",
    "guid": "tcIBIQ9uaEm3NvYU7i2tyg",
    "description": "Clicks {{title}} accordion section",
    "className": "ClickSectionByTitle",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9486,
    "name": "Close all tabs",
    "summary": "",
    "guid": "Or90zRZOAE2SE-1-f45UmQ",
    "description": "Close all tabs until only starting tab is remaining",
    "className": "CloseAllTabs",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 219,
    "name": "Close dialog",
    "summary": "Close dialog window",
    "guid": "PAEAoqmxHUC7-yFs39cXGA",
    "description": "Close dialog window",
    "className": "CloseDialog",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9489,
    "name": "Close last tab",
    "summary": "",
    "guid": "quGFqkR6M0W9gsBe6DNtfQ",
    "description": "Close the last tab opened in the browser",
    "className": "CloseLastTab",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9477,
    "name": "Close tab at index",
    "summary": "",
    "guid": "Rmckhrr-q06cP24JD7epRg",
    "description": "Close the tab at provided index",
    "className": "CloseTabWithIndex",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 134,
    "name": "Close window",
    "summary": "Closes a window with provided index",
    "guid": "6cc71ddb-1aaf-433c-aa94-56d944aac433",
    "description": "Close window with index {{index}}",
    "className": "io.testproject.agent.codeblocks.driver.CloseWindowByHandleIndex",
    "type": "NonElement",
    "source": "System",
    "labels": []
  },
  {
    "id": 7183,
    "name": "Compare Dates",
    "summary": "",
    "guid": "O5qq26JTBkmp_D9rWE8SLQ",
    "description": "Compare {{dateOne}} with {{dateTwo}}",
    "className": "CompareDates",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7314,
    "name": "Compare image with UI element",
    "guid": "Pyte3BWmfUueyd9ZWE5Pyg",
    "description": "Compare UI element with locally saved image, use 'Take element screenshot' to save the image locally first",
    "className": "io.testproject.addon.imagecomparison.Actions.Web.CompareImagesWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7341,
    "name": "Compare image with UI element (Using Dropbox)",
    "guid": "TehLBsngzkSF4Hd8-ioL9A",
    "description": "Compare UI element with image saved on Dropbox",
    "className": "io.testproject.addon.imagecomparison.Actions.DropBox.UICompareWebDropbox",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7323,
    "name": "Compare Images (Using Dropbox)",
    "summary": "Compare Dropbox images",
    "guid": "SbIaTkI1pEKVc2Wzw4xC7w",
    "description": "Compare {{firstFile}} to {{secondFile}} from Dropbox",
    "className": "io.testproject.addon.imagecomparison.Actions.DropBox.CompareImagesDropbox",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9336,
    "name": "Compare two CSV files",
    "summary": "",
    "guid": "kNQp5owEz0m4PfPpJlzrBA",
    "description": "Compare {{pathToFirstCSV}} with {{pathToSecondCSV}}",
    "className": "Actions.CompareTwoCSV",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7320,
    "name": "Compare two images",
    "summary": "Compare two locally stored images and returns the diff, use 'Take element screenshot' to save the image locally first",
    "guid": "e_M82sdVm0isCMRawHeeQg",
    "description": "Compare {{imgA}} with {{imgB}}",
    "className": "io.testproject.addon.imagecomparison.Actions.Generic.CompareTwoImages",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9786,
    "name": "Compare two strings",
    "summary": "Compares two given strings lexicographically. Each character of both the strings is converted into a Unicode value for comparison.",
    "guid": "F3vMHtIjm0i4qlxqJvNDxg",
    "description": "Compares {{firstString}} with {{secondString}}",
    "className": "CompareTwoStrings",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10155,
    "name": "Compare two XLSX files",
    "summary": "Compare two XLSX files and returns a result",
    "guid": "IBcF7AejBUeJ81HSFwogIA",
    "description": "Compare XLSX file {{pathToFirstFile}} with {{pathToSecondFile}}",
    "className": "Actions.CompareXLSFiles",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9762,
    "name": "Concatenate two strings",
    "summary": "Concatenates the second string to the end of the original string",
    "guid": "f3EL4m4enUCJF8-zmsDi1A",
    "description": "Concatenates {{firstString}} with {{secondString}}",
    "className": "ConcatenateTwoStrings",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9122,
    "name": "Contains any text?",
    "guid": "26zixP7SXUir3pQmHAVysw",
    "description": "{{element}} contains any text ?",
    "className": "io.testproject.addons.web.element.ContainsAnyText",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3134,
    "name": "Contains text (match case)",
    "summary": "",
    "guid": "-cMKLnV4qkSn3tKLPPewew",
    "description": "Check for text in PDF with matching case",
    "className": "io.testproject.ContainsTextMatchCase",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3137,
    "name": "Contains text (whole words only)",
    "summary": "",
    "guid": "7u7CQIxbh0GOn1PE6MJXIg",
    "description": "Check for text in PDF with whole words only",
    "className": "io.testproject.ContainsTextWholeWords",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 68,
    "name": "Contains Text?",
    "summary": "Wait for element to be visible & have the defined text",
    "guid": "85da72d0-c5a4-4587-be33-8cb3b5fa7910",
    "description": "Does {{element}} contain {{text}}?",
    "className": "io.testproject.agent.codeblocks.driver.element.wait.WaitForElementToContainText",
    "type": "Element",
    "quickValidation": true,
    "source": "System",
    "labels": [
      "validation"
    ]
  },
  {
    "id": 9922,
    "name": "Contains text? (if visible)",
    "guid": "NLB4QolOjEiJ4WNftvS4EQ",
    "description": "{{element}} contains text {{text}}?",
    "className": "io.testproject.addon.ContainsTextActions.ContainsTextIfVisibleWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9050,
    "name": "Context Click",
    "summary": "Performs a context click at the current mouse position",
    "guid": "ZeVx_7UxX06pRZjbC6J-yQ",
    "description": "Context click {{element}}",
    "className": "io.testproject.addons.web.element.ContextClickOnElement",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9134,
    "name": "Context click",
    "summary": "Right-clicks the mouse at the last known mouse coordinates",
    "guid": "Gzq8NlQ3502KL3OpXgzF1g",
    "description": "Context click",
    "className": "io.testproject.addons.web.actions.ContextClick",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9305,
    "name": "Context click (using JavaScript)",
    "summary": "",
    "guid": "QWrXk4I5jUqE4uwkTHV7sg",
    "description": "Run Context click (using JavaScript)",
    "className": "io.testproject.addon.jsactions.ContextClick",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9783,
    "name": "Convert string to lowercase",
    "summary": "Converts a given string to lowercase",
    "guid": "QvsAgCvRoESS-RUX81mCNw",
    "description": "Convert {{inputString}} to lowercase",
    "className": "ConvertStringToLowerCase",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9822,
    "name": "Convert String To Number",
    "summary": "",
    "guid": "LLeKDg6_SEuy06RZKun-jg",
    "description": "Remove none numeric characters from {{input}}",
    "className": "ConvertStringToNumber",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9801,
    "name": "Convert string to uppercase",
    "summary": "Converts a given string to uppercase",
    "guid": "YWULeuajV06uk87N2HceEQ",
    "description": "Converts {{inputString}} to uppercase",
    "className": "ConvertStringToUpperCase",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 8110,
    "name": "Convert value to MD5 Hash",
    "summary": "",
    "guid": "p3lIOTRh2Ea9JmHLt7RLIQ",
    "description": "Convert {{valueToConvert}} to MD5 Hash",
    "className": "ConvertStringToMD5Hash",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 8113,
    "name": "Convert value to Sha256 Hash",
    "summary": "",
    "guid": "3vAn7rp0O0qvBSC_xaMIUA",
    "description": "Convert {{valueToConvert}} to Sha256 Hash",
    "className": "ConvertStringToSha256Hash",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9348,
    "name": "Convert XLSX file to CSV",
    "summary": "Converts an XLSX file to a CSV file",
    "guid": "QHbZnV8Wm0yMV0csJnoCjQ",
    "description": "Convert {{excelFile}} to {{newCSVFile}}",
    "className": "Actions.ConvertXLSXToCSV",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9879,
    "name": "Convert XML to JSON",
    "summary": "",
    "guid": "rRtbJ6nVjEmKx9j2_9XQKQ",
    "description": "Run Convert XML to JSON",
    "className": "actions.JsonToXMLParser",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4608,
    "name": "Copy File",
    "summary": "Copy File",
    "guid": "awHiLphiFkapjjgzDQ3cFQ",
    "description": "Copy file from {{filePath}} to {{targetPath}}",
    "className": "io.testproject.addons.general.CopyFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9483,
    "name": "Count all open tabs",
    "summary": "",
    "guid": "yOqjGOT4xkS6fDt5UGdXdg",
    "description": "Count all currently open tabs",
    "className": "CountAllTabs",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 227,
    "name": "Count buttons",
    "summary": "Counts buttons in group",
    "guid": "zR1aAOSIJ0ykkfgO8vKK1g",
    "description": "Count buttons in group",
    "className": "CountGroupButtons",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7233,
    "name": "Count Elements",
    "summary": "Counts the amount of elements found by provided locator",
    "guid": "72Wa_2Vse0uCOCY58ZbcCA",
    "description": "Count element found by {{locator}}",
    "className": "io.testproject.addons.element.web.CountElementsFoundByWeb",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9356,
    "name": "Count items in a web list element",
    "guid": "dvJJbb8U30eYls4zGw6sMA",
    "description": "Counts the elements inside an HTML web list element",
    "className": "Actions.CountItems",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9813,
    "name": "Count Strings",
    "summary": "Count how many strings are present in '{{inputString}}' with a given delimiter '{{delimiter}}'",
    "guid": "Bh-j_3o8E0qAtVS9ACh6NA",
    "description": "Count how many strings are present in '{{inputString}}' with a given delimiter '{{delimiter}}'",
    "className": "CountStrings",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9312,
    "name": "Create a new CSV file",
    "summary": "Creates a CSV file from a given string of values",
    "guid": "b2Xgk7sX7ES_beHfNrexVg",
    "description": "Create CSV file",
    "className": "Actions.CreateCSV",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 8016,
    "name": "Create csv file from table",
    "summary": "",
    "guid": "DZz9lHWCvkKJ4L07-wEdBQ",
    "description": "Create an CSV file from a web table in a specific location",
    "className": "Actions.CreateCSVFileFromTableAction",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7485,
    "name": "Create Directory (FTP)",
    "summary": "",
    "guid": "-UovS8jtSUy6iiDNdRQ7zw",
    "description": "Create Directory {{pathName}}",
    "className": "CreateDirectory",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9627,
    "name": "Create File",
    "summary": "Creates file",
    "guid": "QMnZXkU71EmCTCrCXKjR5Q",
    "description": "Create {{filePath}}",
    "className": "CreateFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4611,
    "name": "Create Folder",
    "summary": "Create Folder",
    "guid": "Xx-0DGenskqvcIJV39FQpQ",
    "description": "Creates folder {{folderPath}}",
    "className": "io.testproject.addons.general.CreateFolder",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5704,
    "name": "Decompress Zip File",
    "summary": "",
    "guid": "wBJV0Rz06k24WyIgN8u-xQ",
    "description": "Decompress {{pathToZip}}",
    "className": "DecompressAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 248,
    "name": "Decrease spinner value",
    "summary": "Decreases spinner value",
    "guid": "6MXR7Q9OkEyHDxkRsZfhOw",
    "description": "Decrease spinner value by {{value}}",
    "className": "DecreaseValue",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9318,
    "name": "Delete a column from a CSV file by index",
    "summary": "Deletes a column from a CSV file by a specified index",
    "guid": "d5Qvc2fv1Uy3qUXwyBqodw",
    "description": "Delete column {{index}} from {{path}}",
    "className": "Actions.DeleteColumnByIndex",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9044,
    "name": "Delete a cookie",
    "summary": "Delete the named cookie from the current domain",
    "guid": "j8jPerR5_Uy9n9VSfz3F2Q",
    "description": "Delete a cookie with {{name}}",
    "className": "io.testproject.addons.web.cookies.DeleteCookieByName",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9143,
    "name": "Delete all cookies",
    "summary": "Delete all the cookies for the current domain",
    "guid": "pYLjHfk2cEORV8cwEh2Stw",
    "description": "Delete all cookies",
    "className": "io.testproject.addons.web.cookies.DeleteAllCookies",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 278,
    "name": "Delete an appointment",
    "summary": "Deletes an appointment",
    "guid": "2MenNWhqSUqFs0YPfdmFKQ",
    "description": "Delete an appointment with title {{title}}",
    "className": "DeleteAppointment",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7488,
    "name": "Delete Directory (FTP)",
    "summary": "",
    "guid": "EsVmDMXkeEycbenMvt_WEQ",
    "description": "Delete Directory {{pathName}}",
    "className": "DeleteDirectory",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4614,
    "name": "Delete File",
    "summary": "Delete File",
    "guid": "mJebFiN9o0GMqo1jToBUDA",
    "description": "Delete {{filePath}}",
    "className": "io.testproject.addons.general.DeleteFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9630,
    "name": "Delete File",
    "summary": "Deletes file",
    "guid": "xgs6XI3X8kil2mroEqzkWg",
    "description": "Delete {{filePath}}",
    "className": "DeleteFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7470,
    "name": "Delete File (FTP)",
    "summary": "",
    "guid": "2AjSKVG4kkiFAdaU9GaVyg",
    "description": "Delete {{target}} from FTP Server",
    "className": "DeleteFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7495,
    "name": "Delete File (Google Drive)",
    "summary": "",
    "guid": "s8PxYntsREyAIAx2cE2XGQ",
    "description": "Delete {{fileId}} From Google Drive",
    "className": "DriveActions.Actions.DeleteFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10005,
    "name": "Delete File (if exist)",
    "summary": "This Action Deletes the File if it exists and returns True/False",
    "guid": "dEzRi0cYDUakLJYe9bw-qw",
    "description": "Delete File (if exist)",
    "className": "main.addon.deleteFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10158,
    "name": "Delete file (if exists)",
    "summary": "Delete the file from provided path if it exists",
    "guid": "ugpLyMIahkawDi5x9cUQQg",
    "description": "Delete the file from {{pathToFile}}",
    "className": "Actions.DeleteFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9456,
    "name": "Delete file from Dropbox",
    "summary": "Delete a file from Dropbox",
    "guid": "1B_ONUabA0-gclAEPl9O1w",
    "description": "Delete {{remoteFile}} from Dropbox",
    "className": "Actions.DeleteFileFromDirectory",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9065,
    "name": "Deselect all options",
    "summary": "Clear all selected entries",
    "guid": "vMZwzWGNSUqqmGjFxtUi0w",
    "description": "Deselect all options in {{element}}",
    "className": "io.testproject.addons.web.element.select.DeselectAllOptions",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9071,
    "name": "Deselect all options by value attribute",
    "summary": "Deselect all option with specified value attribute",
    "guid": "d3m_-T1itEym9y6L_pBM5w",
    "description": "Deselect all {{value}} options in {{element}}",
    "className": "io.testproject.addons.web.element.select.DeselectOptionsByValue",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9068,
    "name": "Deselect an option by index",
    "summary": "Deselect an option by it's given index (starts from 0)",
    "guid": "ow0vyzFQsEmFUic5q1IJrw",
    "description": "Deselect an option indexed {{index}} in {{element}}",
    "className": "io.testproject.addons.web.element.select.DeselectOptionByIndex",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9107,
    "name": "Dismiss alert",
    "summary": "Dismisses an alert by clicking on the 'Cancel' button of the alert",
    "guid": "EMIh3PiYJUCde-kETBrGrg",
    "description": "Dismiss alert",
    "className": "io.testproject.addons.web.alert.DismissAlert",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9876,
    "name": "Does a property exists in a JSON object?",
    "summary": "Checks if a certain property exists in a JSON object",
    "guid": "xogAtcW3a0iIIErWG6NH2w",
    "description": "Checks if a property exists in the JSON object",
    "className": "actions.IsPropertyExists",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4691,
    "name": "Does JSON Array contains JSON element?",
    "summary": "",
    "guid": "C9WiTxf42kygBUHkJdQ7Vg",
    "description": "Does {{jsonArray}} contains {{jsonElement}}?",
    "className": "DoesJsonArrayContains",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7251,
    "name": "Double Click",
    "summary": "",
    "guid": "4a20prZwgUy2pDLkUu_7XQ",
    "description": "Double Click {{element}}",
    "className": "io.testproject.addons.element.web.DoubleClickNoJs",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9137,
    "name": "Double click",
    "summary": "Double-clicks the mouse at the last known mouse coordinates",
    "guid": "1gRqktR8lkyYsvmV2JklEg",
    "description": "Double click",
    "className": "io.testproject.addons.web.actions.DoubleClick",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7245,
    "name": "Double Click (using JavaScript)",
    "summary": "",
    "guid": "V1f_gkoADU2dABheMHBebQ",
    "description": "Double Click {{element}} using JavaScript",
    "className": "io.testproject.addons.element.web.DoubleClickWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7473,
    "name": "Download File (FTP)",
    "summary": "",
    "guid": "IKWOdp7J8EWHKhTOiZLOAg",
    "description": "Download {{source}} to {{destination}}",
    "className": "DownloadFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7498,
    "name": "Download File (Google Drive)",
    "summary": "",
    "guid": "0L8QPlAKmkWEKG8oVIPqAA",
    "description": "Download {{fileId}} From Google Drive",
    "className": "DriveActions.Actions.DownloadFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9459,
    "name": "Download file from Dropbox",
    "summary": "Download a file from Dropbox",
    "guid": "wTZR5kNZSEazx-FLgRf1Yg",
    "description": "Download file from {{remoteFile}} to {{localFile}}",
    "className": "Actions.DownloadFileToDirectory",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3667,
    "name": "Drag and Drop by Offset",
    "summary": "Drag and drop element by offset",
    "guid": "zVOHi6jajkK5ad9KY4jGhQ",
    "description": "Drag and drop an element by x: {{xOffset}} y: {{yOffset}} offsets",
    "className": "DragAndDropOffset",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10123,
    "name": "Drag and drop with robot",
    "summary": "Move the mouse from start coordinates to destination while holding left click",
    "guid": "ajYRyuEWuU2SUZnZAZNrqQ",
    "description": "Drag from point {{startX}},{{startY}} to {{endX}},{{endY}}",
    "className": "io.testproject.robot.operations.DragAndDrop",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5554,
    "name": "Draw On Canvas",
    "summary": "",
    "guid": "e3r6soK3U0KTm0JvUI7Ipw",
    "description": "Draw on canvas from {{xStart}},{{yStart}} to {{xOffset}},{{yOffset}}",
    "className": "DrawOnCanvas",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9462,
    "name": "Dropbox directory contents",
    "summary": "Lists the contents of a Dropbox directory",
    "guid": "G8B8zZUlREanL1TQYSNIFg",
    "description": "List contents of Dropbox directory {{directory}}",
    "className": "Actions.ListAllFilesInDirectory",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9633,
    "name": "Duplicate a File",
    "summary": "Duplicates file",
    "guid": "5kEbYeQuVk68oUotucGEoQ",
    "description": "Duplicates {{filePathOriginal}} to {{filePathCopy}}",
    "className": "DuplicateFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9888,
    "name": "Edit value from JSON",
    "summary": "",
    "guid": "MEH9UJZUkEugp-x8g5lYww",
    "description": "Change the value of {{key}} to {{value}}",
    "className": "actions.EditValueFromJSON",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3159,
    "name": "Evaluate Mathematical Expression",
    "summary": "Evaluates mathematical expression",
    "guid": "6ud5oPOg9kaqrUjWtnz_pw",
    "description": "Evaluate {{expression}}",
    "className": "addon.EvaluateMathExpr",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9574,
    "name": "Execute",
    "summary": "Executes a command using operating system shell",
    "guid": "OrWDmbKiC0C4Pz8WGVW34w",
    "description": "Execute {{command}}",
    "className": "io.testproject.Addon.ExecuteShellCommand",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9020,
    "name": "Execute JavaScript",
    "summary": "Executes a JavaScript code",
    "guid": "SFW6Rf9DW0G4jpBW38V4xw",
    "description": "Execute JavaScript {{code}} with arguments {{args}}",
    "className": "io.testproject.addons.web.actions.ExecuteJavascript",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 281,
    "name": "Expand accordion tab",
    "summary": "Expands Accordion tab",
    "guid": "zxMihmDpFEGFaiuJsojYmw",
    "description": "Expand tab {{tabName}}",
    "className": "ExpandTab",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9315,
    "name": "Export CSV file to json",
    "summary": "Opens a CSV file and writing its content into a json string",
    "guid": "cgY88yNrAkq93m0FtHn2TQ",
    "description": "Export {{csvPath}} to json",
    "className": "Actions.CSVToJson",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9885,
    "name": "Extract multiple JsonPaths",
    "summary": "Extract up to 10 JsonPaths from {{jsonFile}}",
    "guid": "PtQW_tRIHEadppRuIxJNNg",
    "description": "Extract multiple JsonPaths from {{jsonFile}}",
    "className": "actions.GetTenValuesFromJSON",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9810,
    "name": "Extract String using RegEx",
    "summary": "",
    "guid": "5GV2lTHvjke3_Wo1NzOuHg",
    "description": "Extract Sub-String from {{input}} using {{regex}}",
    "className": "ExtractStringUsingRegex",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10192,
    "name": "Extract value from String Output Context",
    "summary": "",
    "guid": "XQqALgp_50Wy_bIrYMfgCw",
    "description": "Extracts value within start and end chars",
    "className": "io.testproject.DynamicsApiHandler.ExtractValueFromResponse",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10201,
    "name": "Find Dynamics CRM Data Using Fetch XML",
    "summary": "",
    "guid": "7bDNFqf_JEmzS7MOgDiGNQ",
    "description": "Querying For Dynamics CRM Data Using Fetch XML Query Input",
    "className": "io.testproject.DynamicsApiHandler.TestProjectDynamicsFindByFetchXml",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9780,
    "name": "Find last index of substring from index",
    "summary": "Returns the index within source string of the last occurrence of specified substring, searching backward starting at the specified index",
    "guid": "GTFwBEYpwEiEgrhAlG32zQ",
    "description": "Get the index of the last occurrence of {{subString}}, searching backward starting from index {{fromIndex}}",
    "className": "FindLastSubstringIndexFromIndex",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9765,
    "name": "Find substring index",
    "summary": "Returns the index within source string of the first occurrence of specified substring",
    "guid": "yHdLYazkcUalnRUmAwcRUQ",
    "description": "Get the index of the first occurrence of {{substring}} in {{sourceString}}",
    "className": "FindSubstringIndex",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9771,
    "name": "Find substring last index",
    "summary": "Returns the index within source string of the last occurrence of specified substring",
    "guid": "rjh5i7wL3ku3tDyOmbLpBA",
    "description": "Get the last index of {{substring}} in {{sourceString}}",
    "className": "FindSubstringLastIndex",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7587,
    "name": "Flick element",
    "summary": "",
    "guid": "Zr9tjWI9z02ofWGC9uLAKA",
    "description": "Flick {{element}} {{direction}} ({{x_offset}}, {{y_offset}})",
    "className": "io.testproject.addon.web.touch.gestures.actions.FlickAction",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10207,
    "name": "Generate Random GUID",
    "summary": "",
    "guid": "ctKiQ0wCxkaOfKHewFl_rw",
    "description": "Generates Random GUID",
    "className": "io.testproject.DynamicsApiHandler.GenerateRandomGUID",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3439,
    "name": "Generate random phone number",
    "summary": "",
    "guid": "btvC-oYNPkazg7REct5RWA",
    "description": "Generate phone number in {{country}}",
    "className": "io.testproject.RandomNumber",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3770,
    "name": "Generate random String with specific characters and length",
    "summary": "",
    "guid": "DSQbHbbeuk6jnIGwb23ujA",
    "description": "This action generates a random string from given characters and length",
    "className": "GenerateRandomStringWithFormat",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9032,
    "name": "Get alert text",
    "summary": "Return to text parameter the text in the alert",
    "guid": "Uq88Nz8a9EqTGNIWP3g4PQ",
    "description": "Get alert text",
    "className": "io.testproject.addons.web.alert.GetAlertText",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9969,
    "name": "Get All Documents (MongoDB)",
    "summary": "",
    "guid": "dVCNqvKc0EqfBzON2EbG8w",
    "description": "Get all Documents in a given collection",
    "className": "GetAllDocumentsAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10204,
    "name": "Get All Dynamics CRM Entities",
    "summary": "",
    "guid": "nIL5fqHzsUC7Wq4jnK29Aw",
    "description": "Gets All Dynamics CRM Entities",
    "className": "io.testproject.DynamicsApiHandler.TestProjectDynamicsGetAllEntities",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9056,
    "name": "Get attribute value",
    "summary": "Retrieves the value of an attribute of an element",
    "guid": "7i7ugpUNpkej4ZOFJYYMcw",
    "description": "Get {{attributeName}} attribute value on {{element}}",
    "className": "io.testproject.addons.web.element.GetElementAttribute",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10051,
    "name": "Get browser console logs.",
    "summary": "",
    "guid": "DN7N_xKRCkiT-bFY6aYZfg",
    "description": "Captures the console logs from the browser and writes to the file at specified path.",
    "className": "Firefox.ConsoleLogs.FireFoxConsoleLogs",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4623,
    "name": "Get browser name",
    "summary": "Returns current browser name",
    "guid": "6hmIDqYsEEiPZLTUg40b5w",
    "description": "Returns the name of the browser the test is running on",
    "className": "io.testproject.addons.general.GetBrowserName",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10161,
    "name": "Get cell value",
    "summary": "Extract the cell value from provided parameters",
    "guid": "rC85AsZI3UCzI1vkh77mFw",
    "description": "Get cell from row {{rowNumber}},column {{columnNumber}}",
    "className": "Actions.GetCellValue",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9125,
    "name": "Get Characters Only",
    "summary": "",
    "guid": "y2NQPzbgfkGLh0Gazt5ceg",
    "description": "Return only characters from the text",
    "className": "io.testproject.addons.web.element.GetCharactersOnly",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3140,
    "name": "Get chars after text (PDF)",
    "summary": "",
    "guid": "doFFBXekRk6pels356qGLw",
    "description": "Get the chars by index after the input text",
    "className": "io.testproject.GetCharsAfterText",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3143,
    "name": "Get chars before text (PDF)",
    "summary": "",
    "guid": "gFdwpzeZrE-Jmkk_MzWpaw",
    "description": "Get the chars by index before the input text",
    "className": "io.testproject.GetCharsBeforeText",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3526,
    "name": "Get Chrome logs",
    "summary": "",
    "guid": "CulcA-PLsEmGjXxq6x9ZiA",
    "description": "Run Get Chrome logs",
    "className": "Logs",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7537,
    "name": "Get Color",
    "summary": "",
    "guid": "fNv4-C6Q3Em2n3hJXxNHYg",
    "description": "Return the dominant color of selected element",
    "className": "GetDominantColorWebElement",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7528,
    "name": "Get Color From Local Image",
    "summary": "",
    "guid": "oQDI7nEP1U6-2HGIMW_WuA",
    "description": "Return the dominant color from {{pathToImage}}",
    "className": "GetDominantColor",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10020,
    "name": "Get Column Index From Excel",
    "summary": "This action takes a text as input (header) and returns the index number (column) containing the input text.",
    "guid": "i0UhwoRym0i7IALljkgVug",
    "description": "Get Excel Column Index",
    "className": "main.addon.returnColumnIndex",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10164,
    "name": "Get column sum",
    "summary": "Get the sum of all numbers in a given column ignoring any string",
    "guid": "NELtF8hYL0-0-ClLib_gCw",
    "description": "Get sum of column {{columnNumber}} in {{pathToFile}}",
    "className": "Actions.GetColumnSum",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10167,
    "name": "Get column values",
    "summary": "Get the value of all cells in a given column",
    "guid": "QyMKMPtfLEeNIq-HiFtnlg",
    "description": "Get the value of column {{columnNumber}} in {{pathToFile}}",
    "className": "Actions.GetColumnValue",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9047,
    "name": "Get cookie",
    "summary": "Return specific cookie according to name",
    "guid": "wFLL1Z2370WLnlUT7vUi0Q",
    "description": "Get cookie {{name}}",
    "className": "io.testproject.addons.web.cookies.GetCookieByName",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9053,
    "name": "Get CSS value",
    "summary": "Gets CSS value from an element",
    "guid": "AjL159bsOEy1CD-Fy-gUXg",
    "description": "Get value of {{propertyName}} CSS property on {{element}}",
    "className": "io.testproject.addons.web.element.GetCssValue",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 32,
    "name": "Get current URL",
    "summary": "Retrieves the current URL",
    "guid": "56a4ad1b-b563-4322-ba29-d165090302b2",
    "description": "Get current URL",
    "className": "io.testproject.agent.codeblocks.driver.GetCurrentUrl",
    "type": "NonElement",
    "source": "System",
    "labels": []
  },
  {
    "id": 9092,
    "name": "Get current window handle",
    "summary": "Return an opaque handle to this window that uniquely identifies it within this driver instance",
    "guid": "vZflXlxQD0O6QqbcDVblpw",
    "description": "Get current window handle",
    "className": "io.testproject.addons.web.window.GetCurrentWindowHandle",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10008,
    "name": "Get Data From Excel",
    "summary": "This action takes index number (row, column) and returns the cell contents.",
    "guid": "2iLfMCusQEaZmvAmnKO3eQ",
    "description": "Get Data From Excel",
    "className": "main.addon.getData",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4326,
    "name": "Get DateTime object in a specific format",
    "summary": "Returns a DateTime object in the specified format",
    "guid": "8mQxSv937U6IiGEBWCK_6A",
    "description": "Format currentDateTime {{currentDateTimeValue}} as {{expectedDateTimeFormatFormat}}",
    "className": "Actions.FormatDate.GetDateInFormat",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4335,
    "name": "Get day of the week from a DateTime object",
    "summary": "Returns the day of a week from the given DateTime object",
    "guid": "pPTWbkBRSUmhZIHBS-EQcA",
    "description": "Get day of the week from {{dateTimeValue}}",
    "className": "Actions.Getters.Days.GetDayOfWeek",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 222,
    "name": "Get dialog heading",
    "summary": "Gets the text from dialog header",
    "guid": "KeeuaiS9QkigMnaTqmugxw",
    "description": "Get dialog heading text",
    "className": "GetDialogHeading",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9972,
    "name": "Get Documents by a Query Operator (MongoDB)",
    "summary": "",
    "guid": "qbP6_q-dX0STDdo3xLV8mw",
    "description": "Get all documents that match a given query operator",
    "className": "GetDocumentByOperatorAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7501,
    "name": "Get File ID (Google Drive)",
    "summary": "",
    "guid": "OLqnVND0cUCh0wwYUJpX0g",
    "description": "Returns all IDs of {{fileName}} From Google Drive",
    "className": "DriveActions.Actions.GetFileID",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9975,
    "name": "Get First Document by a Field Value (MongoDB)",
    "summary": "",
    "guid": "6WG44m_v2UuGiMwBG02KPQ",
    "description": "Get the first document that matches a field value",
    "className": "GetFirstDocumentByValuesAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3840,
    "name": "Get Future or Past Date",
    "summary": "",
    "guid": "5HJfEVxv3U2c2xdYcwq0nA",
    "description": "Positive values for future and negative for past dates",
    "className": "FuturePastAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4341,
    "name": "Get hour from a DateTime object",
    "summary": "Returns the hour from the given DateTime object",
    "guid": "r5CIX48u_0ywvkIJrYItug",
    "description": "Get the hour from {{dateTimeValue}}",
    "className": "Actions.Getters.Hours.GetHour",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4344,
    "name": "Get hour from a DateTime object in a string format",
    "summary": "Returns the hour in string format from a given DateTime object (e.g. 09:45 AM)",
    "guid": "K3kkotC6ak6gPtyZAovb4Q",
    "description": "Get hour to string from {{dateTimeValue}}",
    "className": "Actions.Getters.Hours.GetHourInStringFormat",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9083,
    "name": "Get item from local storage",
    "summary": "Retrieves an item from local storage",
    "guid": "Wl1jRuyk70OReg7ujs2eew",
    "description": "Retrieve item {{key}} from local storage",
    "className": "io.testproject.addons.web.localstorage.GetItemFromLocalStorage",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9882,
    "name": "Get JSON from local file",
    "summary": "",
    "guid": "i1vzWRbMyEelmjZRB2PCng",
    "description": "Retrieve JSON array from local file",
    "className": "actions.GetValueFromJSONLocal",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4617,
    "name": "Get Last Downloaded File",
    "summary": "Retrieves information about last modified file in default downloads folder",
    "guid": "UtzAL7WOAkuSOEKnEB2qXA",
    "description": "get last downloaded file details",
    "className": "io.testproject.addons.general.GetLastDownloadedFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7236,
    "name": "Get location",
    "summary": "Retrieves the location (x,y) of an element",
    "guid": "YbFok5RvWUi97e_dm3uGnw",
    "description": "Get {{element}} location",
    "className": "io.testproject.addons.element.web.GetElementLocationWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4350,
    "name": "Get milliseconds of a day from a DateTime object",
    "summary": "Returns the milliseconds of a day from the provided DateTime object",
    "guid": "bjQkcsypQECxR0hNZwWwMA",
    "description": "Get the milliseconds of a day from {{dateTimeValue}}",
    "className": "Actions.Getters.Milliseconds.GetMillisOfDay",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4353,
    "name": "Get milliseconds of a second from a DateTime object",
    "summary": "Returns the milliseconds of a second from the provided DateTime object",
    "guid": "7OM_YkCoekiTEg_ON3akBA",
    "description": "Get milliseconds of a second from {{dateTimeValue}}",
    "className": "Actions.Getters.Milliseconds.GetMillisOfSecond",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 6499,
    "name": "Get Network Logs As JSON",
    "summary": "",
    "guid": "kfcj_n7qiUKetfpRLhog-w",
    "description": "Get Network Logs as JSON",
    "className": "GetNetworkAsJson",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9128,
    "name": "Get Numbers Only",
    "summary": "",
    "guid": "_eKo7zbUNEaI9yCeGICBnw",
    "description": "Return only numbers from the text",
    "className": "io.testproject.addons.web.element.GetNumbersOnly",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 1762,
    "name": "Get OTP code for Google Authenticator",
    "summary": "Generates an OTP for Google Authenticator 2FA",
    "guid": "B2WFHSNUy0SHjEAQk3A4BA",
    "description": "Generate OTP code",
    "className": "Actions.GetOTPCode",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7903,
    "name": "Get Page Source",
    "summary": "Gets page source and optionally saves to file",
    "guid": "ehEaqu7ErU6hQufPZ5ipyw",
    "description": "Get page source and save to file",
    "className": "GetPageSource",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4620,
    "name": "Get path of latest downloaded file",
    "summary": "",
    "guid": "yMUzzmJJtEWqHjyOZieHnQ",
    "description": "Returns the path of the latest downloaded file",
    "className": "io.testproject.addons.general.GetPathOfLastDownloadedFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 234,
    "name": "Get progress bar value",
    "summary": "Gets progress bar current value",
    "guid": "pDOfPeIO-0CEE6GPhua6-g",
    "description": "Retrieve current progress value",
    "className": "GetProgressValue",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 8886,
    "name": "Get random value from a CSV file",
    "summary": "Get random value from a CSV file",
    "guid": "fkMC4T-eR0GqwRI0ZSgY7Q",
    "description": "This action get as an input a CSV file and return a random value",
    "className": "RandomFromCSV",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3845,
    "name": "Get Random Value From Fixed List",
    "summary": "Get random value from fixed list",
    "guid": "u3_J6ziQmkeMfaxlXlhYeA",
    "description": "Get random string from input list",
    "className": "RandomStringFromList",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10170,
    "name": "Get row values",
    "summary": "Extract the row value from provided parameters",
    "guid": "7pbA418tIUefqau9w-LA2w",
    "description": "Get value from row {{rowNumber}}",
    "className": "Actions.GetRowValue",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 608,
    "name": "Get slider value",
    "guid": "l1rYwDZGx02UXLFdG_cG7A",
    "description": "Get current value of slider position",
    "className": "GetCurrentValue",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9777,
    "name": "Get substring in range",
    "summary": "Gets the substring from a string between start and end indexes",
    "guid": "V2lD6-P-2US6fA7P4fJYfg",
    "description": "Get substring of {{inputString}} from {{beginIndex}} to {{endIndex}}",
    "className": "GetStringSubstring",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10011,
    "name": "Get Sum Of The Column Values",
    "summary": "This Action Return The Sum Of The Column Values",
    "guid": "2MGE-6XcM0uCjX0k37YTbQ",
    "description": "Get Sum Of The Column Values",
    "className": "main.addon.getSumOfTheColumnValues",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 255,
    "name": "Get tab name",
    "summary": "Gets selected tab name",
    "guid": "7De4OWFmmU-AKD2B97-6cw",
    "description": "Get selected tab name",
    "className": "GetSelectedTabName",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7239,
    "name": "Get Tag Name",
    "summary": "Retrieves a tag name of an element",
    "guid": "1i_2GSu__kC9wIlMTiX_QA",
    "description": "Get {{element}} tag name",
    "className": "io.testproject.addons.element.web.GetTagNameWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 37,
    "name": "Get text",
    "summary": "Retrieves a text from an element",
    "guid": "225caec3-3231-45d5-a3f3-c4c59b7ab385",
    "description": "Get text from {{element}}",
    "className": "io.testproject.agent.codeblocks.driver.element.GetElementText",
    "quickAction": true,
    "type": "Element",
    "source": "System",
    "labels": []
  },
  {
    "id": 9931,
    "name": "Get text (if visible)",
    "guid": "DvmyABJEKEOo2-2rlbbNvg",
    "description": "Get text from {{element}} if it's visible",
    "className": "io.testproject.addon.GetTextActions.GetTextIfVisibleWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 8022,
    "name": "Get text from a given cell",
    "summary": "",
    "guid": "VPV_930Jt0KWHIv46rU0vQ",
    "description": "Gets text from a given cell(row, column)",
    "className": "Actions.GetTextFromItemByColRow",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9368,
    "name": "Get Text from Currently Selected Option",
    "summary": "",
    "guid": "g-SWxg5gWUa_7Zy6Pqtu7w",
    "description": "Retrieves the text of the currently selected option of a select element",
    "className": "Actions.GetTextFromSelectedItem",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9359,
    "name": "Get text from the Nth child in a web list element",
    "guid": "JRFn8MxfEUyN4xjQfMQGhw",
    "description": "Returns the text of the Nth element inside a web list element",
    "className": "Actions.GetTextOfNthElement",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4308,
    "name": "Get the current DateTime",
    "summary": "Returns the current DateTime",
    "guid": "ZrQnHZWNkkKqSMe6hGqh1Q",
    "description": "Get current date",
    "className": "Actions.CurrentDate",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4329,
    "name": "Get the current DateTime",
    "summary": "Returns the current DateTime in ISO 8601 format (yyyy-MM-ddThh:mm:ss.SSS)",
    "guid": "l5aurwBzi0ej2yhzoXEgpw",
    "description": "Get current DateTime in ISO 8601 format",
    "className": "Actions.GetCurrentDate",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4311,
    "name": "Get the current timestamp",
    "summary": "Returns a moment in the datetime continuum specified as a number of milliseconds from January 1st 1970",
    "guid": "NUw_cv3GiEOLmeBB9WUZJg",
    "description": "Get the current timestamp",
    "className": "Actions.CurrentTimestamp",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4332,
    "name": "Get the day of a month from a DateTime object",
    "summary": "Returns the day of a month from the given DateTime object",
    "guid": "XrhdoirDAUCHg9vaOjZ4Qw",
    "description": "Get the day of a month from {{dateTimeValue}}",
    "className": "Actions.Getters.Days.GetDayOfMonth",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4338,
    "name": "Get the day of a year from a DateTime object",
    "summary": "Returns the day of a year from the given DateTime object",
    "guid": "hzrhIv6TpkGQ1Edw0VG8MQ",
    "description": "Get the day of a year from {{dateTimeValue}}",
    "className": "Actions.Getters.Days.GetDayOfYear",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4314,
    "name": "Get the days difference between two DateTime objects",
    "summary": "Returns the amount of days between two given DateTime objects",
    "guid": "iS9pmAHdDky6BUxnVpr_MA",
    "description": "How many days are between {{firstDateTime}} to {{secondDateTime}}?",
    "className": "Actions.DurationBetweenDates.GetDaysBetweenTwoDates",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4317,
    "name": "Get the hours between two DateTime objects",
    "summary": "Returns the amount of hours between two given DateTime objects",
    "guid": "3I-8x0GzQ0OrnKa22o3oIw",
    "description": "How many hours are between {{firstDateTime}} to {{secondDateTime}}?",
    "className": "Actions.DurationBetweenDates.GetHoursBetweenTwoDates",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4347,
    "name": "Get the milliseconds from a DateTime object",
    "summary": "Returns the milliseconds from the provided DateTime object",
    "guid": "Gspg5VsnR0KmPgl1fkf29g",
    "description": "Get the milliseconds from {{dateTimeValue}}",
    "className": "Actions.Getters.Milliseconds.GetMillis",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4320,
    "name": "Get the minutes between two DateTime objects",
    "summary": "Returns the amount of minutes between two given DateTime objects",
    "guid": "ODw3U7wJ6kGP2FViiO9j4Q",
    "description": "How many minutes are between {{firstDateTime}} to {{secondDateTime}}?",
    "className": "Actions.DurationBetweenDates.GetMinutesBetweenTwoDates",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4359,
    "name": "Get the minutes of hour from a DateTime object",
    "summary": "Returns the minutes of hour from the provided DateTime object",
    "guid": "6gQcmIv6gUWfRZzFCnzlUQ",
    "description": "Get the minutes of hour from {{dateTimeValue}}",
    "className": "Actions.Getters.Minutes.GetMinutesOfHour",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4356,
    "name": "Get the minutes of the day from a DateTime object",
    "summary": "Returns the minutes of the day from the provided DateTime object",
    "guid": "_xTNlws4vEK74t-EeKYBLg",
    "description": "Get the minutes of the day from {{dateTimeValue}}",
    "className": "Actions.Getters.Minutes.GetMinutesOfDay",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4365,
    "name": "Get the month from a DateTime object",
    "summary": "Returns the month from the provided DateTime object",
    "guid": "kkjrlHqgXEaONW4mOIqLQQ",
    "description": "Get the month from {{dateTimeValue}}",
    "className": "Actions.Getters.Months.GetMonthOfYear",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4362,
    "name": "Get the month name from a DateTime object",
    "summary": "Returns the month's name from the provided DateTime object",
    "guid": "FgAH4GKabkCQw1iT0ru5vA",
    "description": "Get the month name from {{dateTimeValue}}",
    "className": "Actions.Getters.Months.GetMonthName",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4323,
    "name": "Get the seconds between two DateTime objects",
    "summary": "Returns the amount of seconds between two given DateTime objects",
    "guid": "IQS2hKWxG0iQGl9y-zM4Kg",
    "description": "How many seconds are between {{firstDateTime}} to {{secondDateTime}}?",
    "className": "Actions.DurationBetweenDates.GetSecondsBetweenTwoDates",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4368,
    "name": "Get the seconds of a day from DateTime object",
    "summary": "Returns the seconds of a day from the provided DateTime object",
    "guid": "0wlqve9WS0KH0ZbioBo7OA",
    "description": "Get the seconds of a day from {{dateTimeValue}}",
    "className": "Actions.Getters.Seconds.GetSecondsOfDay",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4371,
    "name": "Get the seconds of a minute from DateTime object",
    "summary": "Returns the seconds of a minute from the provided DateTime object",
    "guid": "68YukEQmY0OS90nBG70dOg",
    "description": "Get the seconds of a minute from {{dateTimeValue}}",
    "className": "Actions.Getters.Seconds.GetSecondsOfMinute",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9759,
    "name": "Get the string length",
    "summary": "Returns the length of a given string",
    "guid": "AkY6wXBSZ0KVPZiZvv9scA",
    "description": "Get the length of {{inputString}}",
    "className": "StringLength",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4374,
    "name": "Get the week of the year from a DateTime object",
    "summary": "Returns the week of a year from the provided DateTime object",
    "guid": "NBMeWYpE-kyoZAvd7nih7w",
    "description": "Get the week of a year from {{dateTimeValue}}",
    "className": "Actions.Getters.Weeks.GetWeekOfYear",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4377,
    "name": "Get the year from a DateTime object",
    "summary": "Returns the year from the provided DateTime object",
    "guid": "H-esQIh6k0mOIztCur1nOg",
    "description": "Get the year from {{dateTimeValue}}",
    "className": "Actions.Getters.Years.GetFullYear",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 39,
    "name": "Get title",
    "summary": "Retrieves a title of a browser or an application",
    "guid": "c168339f-55c4-4c0d-91fc-cd9d4b8c7574",
    "description": "Get title",
    "className": "io.testproject.agent.codeblocks.driver.GetDriverTitle",
    "type": "NonElement",
    "source": "System",
    "labels": []
  },
  {
    "id": 3875,
    "name": "Get URL status code",
    "summary": "Returns response status code of url",
    "guid": "CkHr2TgNrUeVDFKR-upF1w",
    "description": "Get status code of {{myUrl}}",
    "className": "GetPageResponse",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 245,
    "name": "Get value",
    "summary": "Gets spinner value",
    "guid": "nxn28VVeC069qvs3KjCSLQ",
    "description": "Copy spinner value to {{value}}",
    "className": "GetValue",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9339,
    "name": "Get value from a CSV file using specific row and column",
    "summary": "",
    "guid": "ODc-wjt_AUy4dHjKuNla_w",
    "description": "Returns the value of a CSV file cell",
    "className": "Actions.GetValueFromColAndRow",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9864,
    "name": "Get value from JSON using JsonPath",
    "summary": "Provides search ability in JSON objects using JsonPath. See docs: https://github.com/json-path/JsonPath",
    "guid": "W4_VJE6pXEOqalj9R_9PWw",
    "description": "Gets value in JSON using JsonPath syntax",
    "className": "actions.GetValueFromJSON",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9095,
    "name": "Get windows handles",
    "summary": "Return a set of window handles",
    "guid": "Bdsg6AceskioVRMnflbnsQ",
    "description": "Get windows handles",
    "className": "io.testproject.addons.web.window.GetWindowsList",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3146,
    "name": "Get words after text (PDF)",
    "summary": "",
    "guid": "B5q36yOnuUyKJQHZfsY92A",
    "description": "Get the words by index after the input text",
    "className": "io.testproject.GetWordsAfter",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3149,
    "name": "Get words before text (PDF)",
    "summary": "",
    "guid": "vvKoVDP2Uk-Xa2nTEL2Jwg",
    "description": "Get the words by index before the input text",
    "className": "io.testproject.GetWordsBefore",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7242,
    "name": "Get xpath",
    "summary": "",
    "guid": "6QO-jw1CRUiTIXmtEzytEw",
    "description": "Get {{element}} xpath",
    "className": "io.testproject.addons.element.web.GetXPathWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 266,
    "name": "Group and collapse grid by column",
    "summary": "Groups grid by column and then collapses the group",
    "guid": "pmyfyZvFOUSe_TXt7X_dAA",
    "description": "Group grid by column with name {{name}} and collapse group {{groupName}}",
    "className": "GroupColumnAndCollapse",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 263,
    "name": "Group grid by column",
    "summary": "Groups grid by column",
    "guid": "g2beaVlpZkmqYhTNRFQ6Ow",
    "description": "Group grid by column with name {{name}}",
    "className": "GroupByColumn",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7557,
    "name": "HTTP DELETE Request",
    "summary": "",
    "guid": "ww4p8qViu0iP6bWWjn6L2g",
    "description": "DELETE {{uri}}?{{query}}",
    "className": "io.testproject.addon.restfulapiclient.actions.DeleteAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7554,
    "name": "HTTP GET Request",
    "summary": "",
    "guid": "DiRlYudmtUGjjOgGCGzRIA",
    "description": "GET {{uri}}?{{query}}",
    "className": "io.testproject.addon.restfulapiclient.actions.GetAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7563,
    "name": "HTTP PATCH Request",
    "summary": "",
    "guid": "d-g3gwCcRE6HLmoatjMqgA",
    "description": "PATCH {{uri}}?{{query}}",
    "className": "io.testproject.addon.restfulapiclient.actions.PatchAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7560,
    "name": "HTTP POST Request",
    "summary": "",
    "guid": "3pyX37O89EenPV590WXfPQ",
    "description": "POST {{uri}}?{{query}}",
    "className": "io.testproject.addon.restfulapiclient.actions.PostAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7551,
    "name": "HTTP PUT Request",
    "summary": "",
    "guid": "u-gYO-mRLkuebuJcysWu0Q",
    "description": "PUT {{uri}}?{{query}}",
    "className": "io.testproject.addon.restfulapiclient.actions.PutAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 251,
    "name": "Increase spinner value",
    "summary": "Increases spinner value",
    "guid": "y1IX34jvpEKRC_TkA4l4OQ",
    "description": "Increase spinner value by {{value}}",
    "className": "IncreaseValue",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9816,
    "name": "Insert substring into string in a given index",
    "summary": "Insert {{stringToInsert}} into {{inputString}} at {{index}}",
    "guid": "exIuWDppdUuYojuC2lNFww",
    "description": "Insert {{stringToInsert}} into {{inputString}} at {{index}}",
    "className": "InsertStringInIndex",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 64,
    "name": "Is Clickable?",
    "summary": "Wait for element to be visible & clickable",
    "guid": "a59f3a20-d08d-4293-9add-b279f92e6c41",
    "description": "Is {{element}} is clickable?",
    "className": "io.testproject.agent.codeblocks.driver.element.wait.WaitForElementToBeClickable",
    "type": "Element",
    "quickValidation": true,
    "source": "System",
    "labels": [
      "validation"
    ]
  },
  {
    "id": 9940,
    "name": "Is clickable? (if visible)",
    "guid": "Wl9sAAe1r0qiS9fcNrHMPg",
    "description": "Is {{element}} clickable?",
    "className": "io.testproject.addon.IsClickableActions.IsClickableWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9116,
    "name": "Is Disabled?",
    "summary": "",
    "guid": "bkuOkAu1ekaVU3QscOX16A",
    "description": "Run Is Disabled?",
    "className": "io.testproject.addons.web.element.IsDisabled",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9119,
    "name": "Is Enabled?",
    "summary": "",
    "guid": "bDphxmVHjUilT1vqXMuW2A",
    "description": "Run Is Enabled?",
    "className": "io.testproject.addons.web.element.IsEnabled",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 65,
    "name": "Is not Present or Invisible?",
    "summary": "Wait for element to be invisible or not to be present at all",
    "guid": "104373b7-868c-44ba-bbd2-e16089ad2e48",
    "description": "Is {{element}} not present or invisible?",
    "className": "io.testproject.agent.codeblocks.driver.element.wait.WaitForElementInvisibility",
    "type": "Element",
    "quickValidation": true,
    "source": "System",
    "labels": [
      "validation"
    ]
  },
  {
    "id": 66,
    "name": "Is Present?",
    "summary": "Wait for element to be present",
    "guid": "a9ab4ae7-38ca-4451-a636-1b801a774503",
    "description": "Is {{element}} present?",
    "className": "io.testproject.agent.codeblocks.driver.element.wait.WaitForElementPresence",
    "type": "Element",
    "quickValidation": true,
    "source": "System",
    "labels": [
      "validation"
    ]
  },
  {
    "id": 69,
    "name": "Is Selected?",
    "summary": "Wait for element to be visible and selected",
    "guid": "2c399e26-8d02-41a7-a8d4-acfeda14fb5b",
    "description": "Is {{element}} visible and selected?",
    "className": "io.testproject.agent.codeblocks.driver.element.wait.WaitForElementSelectionState",
    "type": "Element",
    "quickValidation": true,
    "source": "System",
    "labels": [
      "validation"
    ]
  },
  {
    "id": 9949,
    "name": "Is selected? (if visible)",
    "guid": "YZijgJHE4E-32IEQQKZbgQ",
    "description": "Is {{element}} selected?",
    "className": "io.testproject.addon.IsSelectedActions.IsSelectedWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9867,
    "name": "Is valid JSON?",
    "summary": "Checks if the given string is a valid JSON object",
    "guid": "ri0BdA7HNkS51M-dKgQ6JQ",
    "description": "Checks if the given string is a valid JSON object",
    "className": "actions.IsJSON",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9870,
    "name": "Is valid JSONArray?",
    "summary": "Checks if a given string represents a JSONArray object",
    "guid": "NXf2t8lDPE6Hl4cgPT11JA",
    "description": "Checks if a given string is a JSONArray object",
    "className": "actions.IsJSONArray",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9873,
    "name": "Is valid JSONObject?",
    "summary": "Checks if a given string represents a JSONObject",
    "guid": "pLjtSy2VckWrrVQvoFj-uw",
    "description": "Checks if a given string is a JSONObject",
    "className": "actions.IsJSONObject",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 67,
    "name": "Is Visible?",
    "summary": "Wait for the element to be visible (and has width/height > 0)",
    "guid": "5e4cb36f-7757-4d63-8216-ba4e69496416",
    "description": "Is {{element}} visible?",
    "className": "io.testproject.agent.codeblocks.driver.element.wait.WaitForElementVisibility",
    "type": "Element",
    "quickValidation": true,
    "source": "System",
    "labels": [
      "validation"
    ]
  },
  {
    "id": 7476,
    "name": "List Files (FTP)",
    "summary": "",
    "guid": "e0PTwXm10kuhJj8CTjp1lg",
    "description": "List all files in {{path}}",
    "className": "ListFiles",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7504,
    "name": "List Files (Google Drive)",
    "summary": "",
    "guid": "MSEvDChUwEq_5HTRYA0lSg",
    "description": "List Files in Google Drive",
    "className": "DriveActions.Actions.ListFiles",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5707,
    "name": "List Zip File Contents",
    "summary": "",
    "guid": "0Cc_3s6zbESvi8O7HprTCg",
    "description": "List contents of {{pathToZip}}",
    "className": "ListZipContentsAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 396,
    "name": "Live Currency Converter",
    "guid": "0uUBX5Aj40aIx3hiVl62CA",
    "description": "Convert {{amount}} from {{source}} to {{target}}",
    "className": "io.testproject.addon.currency.converter.CurrencyConverterAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9149,
    "name": "Maximize window",
    "summary": "Maximizes the current window",
    "guid": "oss77pMS7U-Bt7cdueaJUw",
    "description": "Maximize window",
    "className": "io.testproject.addons.web.window.MaximizeWindow",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9321,
    "name": "Merge two CSV files",
    "summary": "Merges a new CSV file to an old CSV file",
    "guid": "_hYSkW7Jgkemn66OWVKjqw",
    "description": "Merge {{newFile}} to {{oldFile}}",
    "className": "Actions.MergeTwoCSVFiles",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 2927,
    "name": "Message Slack",
    "summary": "Sends a text on Slack using incoming WebHook",
    "guid": "fL7Mps7XuESLEgY85AYziQ",
    "description": "Slack {{text}} using {{webhook}}",
    "className": "io.testproject.addon.slack.actions.SendSlackMessageAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 1873,
    "name": "Microsoft Authentication Bypass",
    "summary": "",
    "guid": "qKsEdy78B0uMPFlhV7lSUA",
    "description": "Run Microsoft Authentication Bypass",
    "className": "MicrosoftLoginAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9029,
    "name": "Move mouse by offset",
    "summary": "Moves the mouse from current position by the given offset",
    "guid": "pJH3Sg-le0-AgtKPYnNA0w",
    "description": "Moves mouse pointer by offset ({{xOffset}},{{yOffset}})",
    "className": "io.testproject.addons.web.actions.MoveMouseByOffset",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10126,
    "name": "Move mouse to coordinates with Robot",
    "summary": "Can be used to move mouse to coordinates",
    "guid": "FXzGs3BXlUSlf6ulLExZVQ",
    "description": "Move mouse to {{x}},{{y}} coordinates",
    "className": "io.testproject.robot.operations.MoveMouseToCoordinates",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 46,
    "name": "Move mouse to element",
    "summary": "Moves the mouse to the middle of the element and element is scrolled into view",
    "guid": "631118c0-4828-42c8-aa69-0e6107d5956d",
    "description": "Move mouse to {{element}}",
    "className": "io.testproject.agent.codeblocks.driver.element.MoveMouseToElement",
    "type": "Element",
    "source": "System",
    "labels": []
  },
  {
    "id": 9059,
    "name": "Move mouse to element with offset",
    "summary": "Moves the mouse to an offset from the top-left corner of the element, element is scrolled into view",
    "guid": "vq7-1b64sUKpUCWu4xxuHA",
    "description": "Move mouse to {{element}} with offset ({{xOffset}},{{yOffset}})",
    "className": "io.testproject.addons.web.element.MoveMouseToElementByOffset",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 602,
    "name": "Move slider by offset",
    "guid": "CXChO3d9l0advNklAeS4fA",
    "description": "Move slider position by offset {{steps}}",
    "className": "MoveByOffset",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 605,
    "name": "Move slider to position",
    "guid": "HDlBBuMKHEK0Mo122QFYEg",
    "description": "Move slider to {{position}}",
    "className": "MoveToPosition",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 189,
    "name": "Navigate back",
    "summary": "Navigates back in orbit",
    "guid": "jKZWH8klV0Si-eBINhc7OA",
    "description": "Navigate back",
    "className": "NavigateRight",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 49,
    "name": "Navigate back",
    "summary": "Back browser navigation",
    "guid": "43b4408f-3fa1-4ec5-80cd-872d6dff7628",
    "description": "Navigate back",
    "className": "io.testproject.agent.codeblocks.driver.navigation.NavigateBack",
    "type": "NonElement",
    "source": "System",
    "labels": []
  },
  {
    "id": 50,
    "name": "Navigate forward",
    "summary": "Forward browser navigation",
    "guid": "664577f4-e1d2-4c46-b499-3934b447b478",
    "description": "Navigate forward",
    "className": "io.testproject.agent.codeblocks.driver.navigation.NavigateForward",
    "type": "NonElement",
    "source": "System",
    "labels": []
  },
  {
    "id": 183,
    "name": "Navigate next",
    "summary": "Navigates next in orbit",
    "guid": "gQHQKiS0_U6zY5hU9_gPrA",
    "description": "Navigate next",
    "className": "NavigateLeft",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 197,
    "name": "Navigate to next page",
    "summary": "Navigates to next page",
    "guid": "qet0Zuas4ECchcyjdpjigw",
    "description": "Navigate to next page",
    "className": "PreviousPage",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 200,
    "name": "Navigate to next page",
    "summary": "Navigates to next page",
    "guid": "rKsgg3od_0Odmue_1he9kA",
    "description": "Navigate to next page",
    "className": "NextPage",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 186,
    "name": "Navigate to slide",
    "summary": "Navigate to a slide with specified description",
    "guid": "huzskmk1YUamB0ZrT9CjKA",
    "description": "Navigate to slide '{{description}}'",
    "className": "NavigateToSlide",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 51,
    "name": "Navigate to URL",
    "summary": "Browser navigation to the specified URL",
    "guid": "49c5d8d8-4ba8-42f0-823d-702e6acfb23a",
    "description": "Navigate to {{url}}",
    "className": "io.testproject.agent.codeblocks.driver.navigation.NavigateToUrl",
    "type": "NonElement",
    "source": "System",
    "labels": []
  },
  {
    "id": 3499,
    "name": "Navigate to URL with Basic Authentication",
    "summary": "Navigate to URL with basic auth",
    "guid": "_SyD8iSvpUK9e-ns9-f_5Q",
    "description": "Navigate to a URL that required basic authentication",
    "className": "NavigateToBasicAuth",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9480,
    "name": "Open URL in New Tab",
    "summary": "",
    "guid": "NpfgU8jAG06hFpu7NS4wUA",
    "description": "Open a URL in a new tab",
    "className": "NewTabAtURL",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5463,
    "name": "Parse XML using XPATH",
    "summary": "",
    "guid": "LxboXdteEEy3maFYqcN-GA",
    "description": "Parse XPATH: {{xpath}}",
    "className": "UseXpathOnXML",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 128,
    "name": "Pause",
    "summary": "Pauses the execution for the defined time (in milliseconds)",
    "guid": "5ac5d621-7a53-45a6-94e5-a3348be3969e",
    "description": "Pause for {{milliseconds}}ms",
    "className": "io.testproject.agent.codeblocks.general.ThreadSleep",
    "type": "NonElement",
    "source": "System",
    "labels": []
  },
  {
    "id": 3152,
    "name": "PDF Reader",
    "summary": "",
    "guid": "9YCuLlS0Xkeji7G17S_yxg",
    "description": "Read the text content of a PDF file",
    "className": "io.testproject.PDFReadAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 2241,
    "name": "Picksmart Send Email",
    "summary": "Sends an email using SMTP to the specified address.",
    "guid": "Of6pPDeSBUqPYmt44uQRZw",
    "description": "Send email to {{recipientAddress}}",
    "className": "com.email.sender.Mail",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9023,
    "name": "Press and hold key",
    "summary": "Performs a modifier key press (kept pressed)",
    "guid": "h0NXBbNSsEOlbpO69h5DDw",
    "description": "Press and hold {{theKey}}",
    "className": "io.testproject.addons.web.actions.KeyDown",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10120,
    "name": "Press Control+Key with Robot",
    "summary": "Can be used to perform any combination of CTRL+Key for example CTRL+P",
    "guid": "CZu_KYqjZkm14IgBsN3HtQ",
    "description": "Presses and releases CTRL+{{key}}",
    "className": "io.testproject.robot.operations.PressControlPlusKey",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10135,
    "name": "Press Enter with Robot",
    "summary": "Can be used to accept popups",
    "guid": "aHcbscfJy0-4s_18gJFMrA",
    "description": "Presses and releases Enter",
    "className": "io.testproject.robot.operations.PressEnter",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10138,
    "name": "Press Escape with Robot",
    "summary": "Can be used to cancel popups",
    "guid": "Zfr-couWUUaK49N5lYQ1Qg",
    "description": "Presses and releases ESC",
    "className": "io.testproject.robot.operations.PressEscape",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10105,
    "name": "Press multiple keys with Robot",
    "summary": "Can be used to perform any combination of CTRL+Key for example CTRL+P",
    "guid": "4WVNXNFs8ky-__b2pxEGuQ",
    "description": "Presses and releases {{key1}}+{{key2}}+{{key3}}",
    "className": "io.testproject.robot.operations.PressMultipleKeys",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10132,
    "name": "Press Tab with Robot",
    "summary": "Can be used to navigate between fields",
    "guid": "yQUN4eNudUK3C8bCOhx8OA",
    "description": "Presses and releases Tab",
    "className": "io.testproject.robot.operations.PressTab",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10111,
    "name": "Print current document with Robot",
    "summary": "Presses and releases multiple keys to print a document at given path",
    "guid": "kRVUTvLlkkGAZQw4JGNLQQ",
    "description": "Print a document to {{path}}",
    "className": "io.testproject.robot.operations.PrintDocument",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7951,
    "name": "Random age",
    "summary": "Generates random age",
    "guid": "o8lDsG3V_U6wX9HcVknniQ",
    "description": "Generate random age",
    "className": "GenerateAge",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7966,
    "name": "Random altitude",
    "summary": "Generates random altitude",
    "guid": "ABfeqGQvdUKyPUK-VyC2yA",
    "description": "Generate random altitude",
    "className": "GenerateAltitude",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7984,
    "name": "Random birthday",
    "summary": "Generates random birthday",
    "guid": "uf7WeysN9E2-gMWr50SV1A",
    "description": "Generate random birthday",
    "className": "GenerateBirthday",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7939,
    "name": "Random boolean",
    "summary": "Generates random boolean",
    "guid": "8O_v2bFNAkGlrLZ7cXL8Mg",
    "description": "Generate random boolean",
    "className": "GenerateBoolean",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7954,
    "name": "Random char",
    "summary": "Generates random char",
    "guid": "TtSMP9RPuUyw8WC3CMpYHA",
    "description": "Generate random char",
    "className": "GenerateChar",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7957,
    "name": "Random city",
    "summary": "Generates random city",
    "guid": "0H2Hpx67IE2tJKJ9ekEZCw",
    "description": "Generate random city",
    "className": "GenerateCity",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7912,
    "name": "Random country",
    "summary": "Generates random country",
    "guid": "5eSctccddkWFqcc6fASGCQ",
    "description": "Generate random country",
    "className": "GenerateCountry",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7993,
    "name": "Random credit-card expiry date",
    "summary": "Generates random credit-card expiry date",
    "guid": "jPLANDQh5U2xgwovN90Gwg",
    "description": "Generate random credit-card expiry date",
    "className": "GenerateCredicardExpiry",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 8002,
    "name": "Random credit-card number",
    "summary": "Generates random credit-card number",
    "guid": "GvLDt8r_H0uC5QCvznHgbQ",
    "description": "Generate random credit-card number",
    "className": "GenerateCredicardNumber",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7987,
    "name": "Random credit-card type",
    "summary": "Generates random credit-card type",
    "guid": "Y0cx_vDxQkaaJcdWhH1ttg",
    "description": "Generate random credit-card type",
    "className": "GenerateCredicardType",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7981,
    "name": "Random credit-card verification value",
    "summary": "Generates random credit-card verification value",
    "guid": "qO0qyXMJPE6SJKccXIiSBQ",
    "description": "Generate random credit-card verification value",
    "className": "GenerateCredicardVV",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7999,
    "name": "Random decimal",
    "summary": "Generates random decimal",
    "guid": "o2l8hUtFYky-PGn7AHVMqA",
    "description": "Generate random decimal",
    "className": "GenerateDecimal",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7972,
    "name": "Random depth",
    "summary": "Generates random depth",
    "guid": "UNFz7Bd8BkeeisNnKu7lLA",
    "description": "Generate random depth",
    "className": "GenerateDepth",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7960,
    "name": "Random double",
    "summary": "Generates random double",
    "guid": "ceibxksTTUa6QXmPX89Wmg",
    "description": "Generate random double",
    "className": "GenerateDouble",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 2650,
    "name": "Random Email Address",
    "summary": "",
    "guid": "YHKpdDSNAE2QOWsTZob-4Q",
    "description": "Generate random email address",
    "className": "main.Addons.RandomEmail",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7975,
    "name": "Random first name",
    "summary": "Generates random first name",
    "guid": "-H98fdaDgEmY3UvRXNL7xQ",
    "description": "Generate random first name",
    "className": "GenerateFirstName",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7927,
    "name": "Random float",
    "summary": "Generates random float",
    "guid": "rqoJFsJ940uJgiIu6QTtgw",
    "description": "Generate random float",
    "className": "GenerateFloat",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7945,
    "name": "Random gender",
    "summary": "Generates random gender",
    "guid": "MzCNf_TyOUaHWugmqN42LQ",
    "description": "Generate random gender",
    "className": "GenerateGender",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7948,
    "name": "Random last name",
    "summary": "Generates random last name",
    "guid": "8nGSxKf39kWU9SO2STu4Jw",
    "description": "Generate random last name",
    "className": "GenerateLastName",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7918,
    "name": "Random latitude",
    "summary": "Generates random latitude",
    "guid": "O08kB8q3e0u2fY6TbMhwPw",
    "description": "Generate random latitude",
    "className": "GenerateLatitude",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7933,
    "name": "Random longitude",
    "summary": "Generates random longitude",
    "guid": "5XJ1OB-RwUWkbGOafqmdRA",
    "description": "Generate random longitude",
    "className": "GenerateLongitude",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7996,
    "name": "Random lorem ipsum",
    "summary": "Generates random lorem ipsum",
    "guid": "VeUQrR-nIkOyaCraosF0lw",
    "description": "Generate random lorem ipsum",
    "className": "GenerateLoremIpsum",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7915,
    "name": "Random name",
    "summary": "Generates random name",
    "guid": "WPhnHCq54UahejQjE96ABw",
    "description": "Generate random name",
    "className": "GenerateName",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7930,
    "name": "Random natural",
    "summary": "Generates random natural",
    "guid": "h9A1LdCGi02iSTesrxew7g",
    "description": "Generate random natural",
    "className": "GenerateNatural",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 8005,
    "name": "Random number in a range",
    "summary": "Generates random number between a specified range",
    "guid": "nHBKyka6qkCOqAudow9lbg",
    "description": "Generate random number between {{min}} and {{max}}",
    "className": "GenerateNumberInRange",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7921,
    "name": "Random paragraph",
    "summary": "Generates random paragraph",
    "guid": "PVqOSglr70ysRJAE5_mc1w",
    "description": "Generate random paragraph",
    "className": "GenerateParagraph",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 2653,
    "name": "Random Password",
    "summary": "",
    "guid": "wV-oaMe-N069YX-ISFnuxg",
    "description": "Generate random password",
    "className": "main.Addons.RandomPassword",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7963,
    "name": "Random postcode",
    "summary": "Generates random postcode",
    "guid": "Dy3SuIjSuUSvXzCwx7SVdg",
    "description": "Generate random postcode",
    "className": "GeneratePostcode",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7978,
    "name": "Random prefix",
    "summary": "Generates random prefix",
    "guid": "b4QtOPE2OkiXK4wutv28Rw",
    "description": "Generate random prefix",
    "className": "GeneratePrefix",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7942,
    "name": "Random sentence",
    "summary": "Generates random sentence",
    "guid": "H-FV-TZKqEmdi1gjFb3d2w",
    "description": "Generate random sentence",
    "className": "GenerateSentence",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7924,
    "name": "Random street",
    "summary": "Generates random street",
    "guid": "2jVTZsFXW0S4ZPuNd1a7TQ",
    "description": "Generate random street",
    "className": "GenerateStreet",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7969,
    "name": "Random string",
    "summary": "Generates random string",
    "guid": "bhTv4MQisUeMHx4bYajqUA",
    "description": "Generate random string",
    "className": "GenerateString",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7990,
    "name": "Random syllable",
    "summary": "Generates random syllable",
    "guid": "Dp4aoAje7k23F2_aaELqHA",
    "description": "Generate random syllable",
    "className": "GenerateSyllable",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 2656,
    "name": "Random Username",
    "summary": "",
    "guid": "4DPWwtQJQk23TmTAFOarXg",
    "description": "Generate random username",
    "className": "main.Addons.RandomUsername",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7936,
    "name": "Random word",
    "summary": "Generates random word",
    "guid": "ImObbQwAY0S_P7k1hnUXow",
    "description": "Generate random word",
    "className": "GenerateWord",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10014,
    "name": "Read Column Values From Excel",
    "summary": "This action combines and returns all values in the index-given column.",
    "guid": "BefaP0Ghs0uBEKkIPR5Y5Q",
    "description": "Read Excel Column",
    "className": "main.addon.readColumnValue",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9342,
    "name": "Read CSV column",
    "summary": "",
    "guid": "OIGUNCh4qUij7j5XyhhsUQ",
    "description": "Read data from column {{column}}",
    "className": "Actions.ReadColumn",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9345,
    "name": "Read CSV row",
    "summary": "",
    "guid": "EmqXUofzO0ewxFwML8ctPA",
    "description": "Read data from row {{row}}",
    "className": "Actions.ReadRow",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 8025,
    "name": "Read entire table",
    "summary": "",
    "guid": "EcmVrOySHEKw87eBlO0PZw",
    "description": "Reads the entire table, including headers, and outputs the table as a comma delimited string.",
    "className": "Actions.ReadEntireTableAction",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9636,
    "name": "Read File",
    "summary": "Read file to test parameter",
    "guid": "2tygRi6yXEOS9NlcaCS1Ww",
    "description": "Read {{filePath}} to an output parameter",
    "className": "ReadFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3720,
    "name": "Read QR code from Dropbox image",
    "summary": "Reads QR code from image in Dropbox",
    "guid": "XVjvmm7w10KkWrH5369K3g",
    "description": "Reads QR code contents from Dropbox image located at {{path}}",
    "className": "Actions.ReadQRFromDropbox",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3723,
    "name": "Read QR code from image",
    "summary": "Reads QR code from image",
    "guid": "nU9pBbmKokWyhyoXYtypZg",
    "description": "Reads QR code contents from image located at {{path}}",
    "className": "Actions.ReadQRGeneric",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3732,
    "name": "Read QR code from web element",
    "summary": "Reads QR code from web element",
    "guid": "ZnZDfxXudUahe3bmjEJPRw",
    "description": "Reads QR code contents from selected web element",
    "className": "ElementActions.ReadQRWebElement",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10017,
    "name": "Read Row Values From Excel",
    "summary": "This action combines and returns all values in the index-given row.",
    "guid": "GM_N7ZoxnkG6mkLd61glaA",
    "description": "Read Excel Row",
    "className": "main.addon.readRowValue",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7516,
    "name": "Read up to 10 values from a row (Google Sheets)",
    "summary": "",
    "guid": "Oqxp9MP1xUesgxAHx160IQ",
    "description": "Read values from {{row}} in {{range}}",
    "className": "SheetsActions.Actions.ReadRow",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7510,
    "name": "Read Value In Column and Row (Google Sheets)",
    "summary": "",
    "guid": "qxAFe1XF7kWmxPBO1AFm_A",
    "description": "Read Value in ({{row}},{{column}})",
    "className": "SheetsActions.Actions.ReadColRow",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7513,
    "name": "Read value using Header and Row (Google Sheets)",
    "summary": "",
    "guid": "1mUiqmifykSIpZKtBGBW4A",
    "description": "Read value at header: {{headerValue}} and row: {{row}}",
    "className": "SheetsActions.Actions.ReadParamWithRowAndHeader",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 52,
    "name": "Refresh",
    "summary": "Refreshes the current browser tab",
    "guid": "3a06acbf-9138-4392-bca1-c1946886b65d",
    "description": "Refresh",
    "className": "io.testproject.agent.codeblocks.driver.navigation.NavigateByRefresh",
    "type": "NonElement",
    "source": "System",
    "labels": []
  },
  {
    "id": 9140,
    "name": "Release left mouse button",
    "summary": "Releases the mouse button at the last known mouse coordinates",
    "guid": "UQS3eDCG2UusqsDOLzM0MQ",
    "description": "Release left mouse button",
    "className": "io.testproject.addons.web.actions.ReleaseClick",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9026,
    "name": "Release pressed key",
    "summary": "Releases the key (shift, ctrl, etc) that was pressed",
    "guid": "6bgBxDrqEEiLIos0siwpxg",
    "description": "Release {{theKey}}",
    "className": "io.testproject.addons.web.actions.KeyUp",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9086,
    "name": "Remove item from local storage",
    "summary": "Removes an item from local storage",
    "guid": "tU8eyK-Ih0u8yRcTopqqJA",
    "description": "Removes item {{key}} from local storage",
    "className": "io.testproject.addons.web.localstorage.RemoveItemFromLocalStorage",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 1158,
    "name": "Remove non numeric characters",
    "summary": "",
    "guid": "-DoDu7HvOEa-_xGdCWQH-Q",
    "description": "Remove all non numeric characters from {{input}}",
    "className": "io.testproject.addon.FilterDigits",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9639,
    "name": "Rename a File",
    "summary": "Renames file",
    "guid": "UkbEbXgk30OlwgHMDh9IbA",
    "description": "Rename {{filePath}} to {{newName}}",
    "className": "RenameFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7479,
    "name": "Rename File (FTP)",
    "summary": "",
    "guid": "GwS1dtk1gEeIjXycYtOWBA",
    "description": "Rename {{from}} to {{to}}",
    "className": "RenameFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9807,
    "name": "Replace first substring",
    "summary": "Replaces the first substring of source string that match the given regular expression with the given replacement",
    "guid": "HXtty8tNzk6mxMVFjr44wg",
    "description": "Replace the first occurrence of {{regex}} with {{replacement}} in {{sourceString}}",
    "className": "ReplaceSubstringFirstOcurrence",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9768,
    "name": "Replace substrings",
    "summary": "Replaces all substrings in the input string",
    "guid": "9d8Tj6Nc5E-7JdQMyhE8kw",
    "description": "Replace all occurrences of {{target}} with {{replacement}} in {{inputString}}",
    "className": "ReplaceSubstrings",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9798,
    "name": "Replace substrings with regex",
    "summary": "Replaces all substrings of source string that match the given regular expression with the given replacement",
    "guid": "_Vnw1rzKnEGLND-pzzrBSw",
    "description": "Replace all occurrences of {{regex}} with {{replacement}} in {{sourceString}}",
    "className": "ReplaceSubstringsWithRegex",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 671,
    "name": "Report step message",
    "summary": "Reports a blank step execution with specified message",
    "guid": "OjigZ4Jc70GFpG_Q_S8GCA",
    "description": "Report {{text}}",
    "className": "io.testproject.addon.report.utilities.ReportStepMessage",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9324,
    "name": "Reverse the order of a CSV file",
    "summary": "Reveres the order of the provided CSV file",
    "guid": "9apF1ll8a02Enil05TtGjQ",
    "description": "Reverse a CSV file",
    "className": "Actions.ReverseCSVOrder",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 1677,
    "name": "Run NLP Command",
    "summary": "Execute Natural Language Statement",
    "guid": "9kBdPC163Ey8WUWOuGlbwQ",
    "description": "Execute {{sentence}}",
    "className": "momAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9113,
    "name": "Save All Cookies to file",
    "summary": "",
    "guid": "0LoGwkSKYUKYeqLlbJPrrg",
    "description": "Saves all current session cookies to a text file",
    "className": "io.testproject.addons.web.cookies.SaveAllCookiesToFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9294,
    "name": "Scroll to element",
    "summary": "",
    "guid": "tlxDTzMxe0eErx2PMkql2g",
    "description": "Scrolls to an element with defined amount of swipes",
    "className": "io.testproject.addon.scrollelement.ScrollToElement",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9288,
    "name": "Scroll to element by class name",
    "summary": "",
    "guid": "y0b7Qgkp2EO4xJJpUyvLtQ",
    "description": "Run Scroll to element by class name",
    "className": "io.testproject.addon.scrollelement.ByClassName",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9279,
    "name": "Scroll to element by ID",
    "summary": "",
    "guid": "406XcKKdJkirsIX73Ym4MQ",
    "description": "Run Scroll to element by ID",
    "className": "io.testproject.addon.scrollelement.ByElementID",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9276,
    "name": "Scroll to element by ID that contain text",
    "summary": "",
    "guid": "dgK5PohqnU2mBVxmQfRUXg",
    "description": "Run Scroll to element by ID that contain text",
    "className": "io.testproject.addon.scrollelement.ByIdContain",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9285,
    "name": "Scroll to element by xpath",
    "summary": "",
    "guid": "nnPtZ4gVPEqI8xOtbNEAqg",
    "description": "Run Scroll to element by xpath",
    "className": "io.testproject.addon.scrollelement.ByXpath",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9291,
    "name": "Scroll to element that contains text",
    "summary": "",
    "guid": "U0rU8_fPDE25vsF7Hj2_JA",
    "description": "Run Scroll to element that contains text",
    "className": "io.testproject.addon.scrollelement.ByContainsText",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9282,
    "name": "Scroll to element that matches text",
    "summary": "",
    "guid": "3FMdYWYyWEmZlObWvUx2UQ",
    "description": "Run Scroll to element that matches text",
    "className": "io.testproject.addon.scrollelement.ByMatchesText",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9308,
    "name": "Scroll To Element With Javascript",
    "summary": "Scroll to a given element using Javascript",
    "guid": "Nv5yOK03QkCH5IC9CwaKoQ",
    "description": "Using Javascript to scroll to the element",
    "className": "io.testproject.addon.jsactions.ScrollToElementAction",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5008,
    "name": "Scroll window",
    "summary": "Scrolls the document by the specified number of pixels",
    "guid": "a5d4eb31-51f0-4c62-8832-60c6bcd51a16",
    "description": "Scroll window by ({{x}},{{y}})",
    "className": "io.testproject.agent.codeblocks.driver.window.ScrollWindow",
    "type": "NonElement",
    "source": "System",
    "labels": []
  },
  {
    "id": 10173,
    "name": "Search and replace by value",
    "summary": "Search the value from provided parameters and replace it",
    "guid": "APON3v_950SZBMhI4snKeA",
    "description": "Searches the value {{searchValue}} and replace it with {{replaceValue}}",
    "className": "Actions.ReplaceByValue",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10023,
    "name": "Search Data From Excel",
    "summary": "This action returns the index (row and column) of input text.",
    "guid": "8mqUan7ENkuExYWN0f84xA",
    "description": "Search Data From Excel",
    "className": "main.addon.searchData",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10179,
    "name": "Search header index by value",
    "summary": "Search the header value from provided parameters and return the header index if found",
    "guid": "2dRCiaTTakKN5yyLpQDWNQ",
    "description": "Searches the header value {{headerValue}} in {{pathToFile}}",
    "className": "Actions.SearchHeaderIndex",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 8019,
    "name": "Search text",
    "summary": "",
    "guid": "9UvA-K90H0CBTEk123HVdg",
    "description": "Returns true if the text was found and the position",
    "className": "Actions.GetItemByText",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10176,
    "name": "Search value",
    "summary": "Search the value from provided parameters and return result if found",
    "guid": "Ej9ZdqdgREaafA_ekT2Tkw",
    "description": "Searches the value {{searchValue}} in {{pathToFile}}",
    "className": "Actions.SearchByValue",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9077,
    "name": "Select all options by value attribute",
    "summary": "Select all options with selected value attribute",
    "guid": "T52qF0F4S0eSDKz2NXQJ1w",
    "description": "Select all {{value}} options in {{element}}",
    "className": "io.testproject.addons.web.element.select.SelectOptionByValue",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9062,
    "name": "Select allows multiple selection?",
    "summary": "Checks whether this select element support selecting multiple options at the same time",
    "guid": "eIpp4m0nfkCjiSDOfU3ldQ",
    "description": "Does {{element}} allows multiple selection?",
    "className": "io.testproject.addons.web.element.select.CheckIfSelectAllowsMultipleSelection",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9074,
    "name": "Select an option by index",
    "summary": "Deselect an option by it's given index (start from 0)",
    "guid": "cFwIaQAe2kKuqTip20sJhg",
    "description": "Select option indexed {{index}} in {{element}}",
    "className": "io.testproject.addons.web.element.select.SelectOptionByIndex",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 54,
    "name": "Select an option by value",
    "summary": "Select an option that has a value matching the argument",
    "guid": "45fdd921-b359-4d6a-b7c5-5f9a3612c0f2",
    "description": "Select the {{value}} option in {{element}}",
    "className": "io.testproject.agent.codeblocks.driver.element.select.SelectOptionByValue",
    "type": "Element",
    "source": "System",
    "labels": []
  },
  {
    "id": 224,
    "name": "Select button with text",
    "summary": "Selects button from button group by it's text contents",
    "guid": "SOSG5fLnlkqWg_nSGwretg",
    "description": "Select button from button group by searching for '{{text}}' in it's contents",
    "className": "SelectButtonByText",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 213,
    "name": "Select item",
    "summary": "Select dropdown item found by text contents",
    "guid": "Pd4JYarahkiAnVA-IhTw5A",
    "description": "Select dropdown item found by '{{text}}' contents",
    "className": "DropdownSelectItem",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9080,
    "name": "Select options by text",
    "summary": "Select any option with text that have a value matching the value parameter",
    "guid": "kAy2y3oDuU-OD1ipMDiRPw",
    "description": "Select options in {{element}} with text {{text}}",
    "className": "io.testproject.addons.web.element.select.SelectOptionbyVisibleText",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 194,
    "name": "Select page",
    "summary": "Select page by it's number",
    "guid": "-wz5ArbNVU25YgDeAOHt5w",
    "description": "Select page {{pageNumber}}",
    "className": "SelectPage",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 182,
    "name": "Select tab",
    "summary": "Selects tab by it's title",
    "guid": "PPZFPtZjaUyLOyqTOSbA1w",
    "description": "Select tab {{tabName}}",
    "className": "SelectTab",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 252,
    "name": "Select tab",
    "summary": "Select tab by name",
    "guid": "O6rGXJFJ0U6-GHFX5di0TQ",
    "description": "Select tab with name {{name}}",
    "className": "SelectByName",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10195,
    "name": "Send Dynamics CRM GET Request With Basic/NTLM Authentication",
    "summary": "",
    "guid": "22ds2wSem0OKltNmkGPHEA",
    "description": "Sending Dynamics CRM GET Requests Which Requires Basic/NTLM Authentication",
    "className": "io.testproject.DynamicsApiHandler.TestProjectDynamicsGetRequestActionInterface",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10198,
    "name": "Send Dynamics CRM POST Request With Basic/NTLM Authentication",
    "summary": "",
    "guid": "rQUc6TFWmE6cRlDXOPOahQ",
    "description": "Sending Dynamics CRM POST Requests Which Requires Basic/NTLM Authentication",
    "className": "io.testproject.DynamicsApiHandler.TestProjectDynamicsPostRequestActionInterface",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5235,
    "name": "Send email",
    "summary": "Send an email using SMTP (Uses GMAIL by default)",
    "guid": "RXAfD8jrLEq87vTibcCUMw",
    "description": "Send an email using SMTP, supports multiple attachments",
    "className": "SendMail",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 136,
    "name": "Send Keys",
    "summary": "Sends Keys (e.g. TAB), see https://docs.testproject.io/tips-and-tricks/send-keys for full list",
    "guid": "928bf14e-7a56-4371-b92a-9cb9de53f632",
    "description": "Send {{keys}} key(s)",
    "className": "io.testproject.agent.codeblocks.driver.SendKeys",
    "type": "NonElement",
    "source": "System",
    "labels": []
  },
  {
    "id": 9035,
    "name": "Send keys to alert",
    "summary": "Sends keys (text) to an alert",
    "guid": "AVDMgGh1h06THb3OIVdceg",
    "description": "Send {{keys}} to alert",
    "className": "io.testproject.addons.web.alert.SendKeysToAlert",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3754,
    "name": "Send SQL Query (Db2 Database)",
    "summary": "",
    "guid": "yzNJcQQT_Uq2muPaCZrsJg",
    "description": "Send an SQL query to an IBM Db2 Database",
    "className": "io.testproject.Action.SendSQLQueryAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4903,
    "name": "Send SQL Query (MSSQL Database)",
    "summary": "",
    "guid": "jpKRsCvgdk6AWj2mWCRylg",
    "description": "Send an SQL query to an MSSQL Database",
    "className": "io.testproject.Action.SendSQLQueryAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9823,
    "name": "Send SQL Query (MySQL)",
    "summary": "",
    "guid": "7Oc8bgpZ2k-7VhooCxMqZQ",
    "description": "Run Send SQL Query (MySQL)",
    "className": "io.testproject.addon.sql.tools.mysql.SendSQLQueryAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3790,
    "name": "Send SQL Query (Oracle Database)",
    "summary": "",
    "guid": "jx6s4F4uH0CfuwohjqZPJA",
    "description": "Send an SQL query to an Oracle Database",
    "className": "io.testproject.Action.SendSQLQueryAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9828,
    "name": "Send SQL Query (PostgreSQL)",
    "summary": "",
    "guid": "nbOT5FdHAkuk5HcfMBJXSg",
    "description": "Run Send SQL Query (PostgreSQL)",
    "className": "io.testproject.addon.sql.tools.postgresql.SendSQLQueryAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5098,
    "name": "Send SQL Query (TeraData Database)",
    "summary": "",
    "guid": "-8On2j0p_UG5Tc9GmQzzVA",
    "description": "Send a SQL query to a TeraData Database",
    "className": "SendSqlQueryAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9110,
    "name": "Set attribute value",
    "summary": "Sets the value of an attribute of an element",
    "guid": "HUG3yrSV3E-lym9Tz0-2hg",
    "description": "Set {{attributeName}} attribute value on {{element}}",
    "className": "io.testproject.addons.web.element.SetElementAttribute",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10182,
    "name": "Set cell value",
    "summary": "Set the value to a cell from provided parameters",
    "guid": "sKeFCQ_XZUmiuE9Gm99IzA",
    "description": "Set the value {{newValue}} to cell {{rowNumber}},{{columnNumber}}",
    "className": "Actions.SetCellValue",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4380,
    "name": "Set days of a DateTime object",
    "summary": "Sets the days of a given DateTime object and returns the new DateTime object. Can be positive/negative.",
    "guid": "lxdcANenAUSgn1vXZAoM2Q",
    "description": "Set {{days}} days to {{originalDateTimeValue}}",
    "className": "Actions.Setters.SetDays",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7491,
    "name": "Set Directory/File permissions (FTP)",
    "summary": "",
    "guid": "PVAyd7N-rUCiVoHTAG05aQ",
    "description": "Set {{pathName}} permissions to {{permissions}}",
    "className": "SetPermissions",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4383,
    "name": "Set hours of a DateTime object",
    "summary": "Set the hours of a given DateTime object and returns the new DateTime object. Can be positive/negative.",
    "guid": "1FQgBJuvT0Su9I8NC6ZLcQ",
    "description": "Set {{hours}} hours to {{originalDateTimeValue}}",
    "className": "Actions.Setters.SetHours",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4386,
    "name": "Set milliseconds of a DateTime object",
    "summary": "Sets the milliseconds of a given DateTime object and returns the new DateTime object. Can be positive/negative.",
    "guid": "yv48jxRNqU-pTBb1yvk5_A",
    "description": "Set {{milliseconds}} milliseconds to {{originalDateTimeValue}}",
    "className": "Actions.Setters.SetMillis",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4389,
    "name": "Set minutes of a DateTime object",
    "summary": "Sets the minutes of a given DateTime object and returns the new DateTime object. Can be positive/negative.",
    "guid": "Hc_5wJmzSUy6Q0XImty6Uw",
    "description": "Set {{minutes}} minutes to {{originalDateTimeValue}}",
    "className": "Actions.Setters.SetMinutes",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4392,
    "name": "Set months of a DateTime object",
    "summary": "Sets the months of a given DateTime object and returns the new DateTime object. Can be positive/negative.",
    "guid": "1hcEQkxhcEmQHYHUiOgXZw",
    "description": "Set {{months}} months to {{originalDateTimeValue}}",
    "className": "Actions.Setters.SetMonths",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4395,
    "name": "Set seconds of a DateTime object",
    "summary": "Sets the seconds of a given DateTime object and returns the new DateTime object. Can be positive/negative.",
    "guid": "KcJ941h5skOWzm1HQKHirA",
    "description": "Set {{seconds}} seconds to {{originalDateTimeValue}}",
    "className": "Actions.Setters.SetSeconds",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9089,
    "name": "Set value for item in local storage",
    "summary": "Sets value for item in local storage",
    "guid": "BmXFbV7XGUa3i7nGAbpybQ",
    "description": "Set value {{value}} for {{key}} in local storage",
    "className": "io.testproject.addons.web.localstorage.SetItemInLocalStorage",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 1674,
    "name": "Set value to a parameter",
    "summary": "Sets a value to a new or existing parameter",
    "guid": "6Cfge0QgaUyAK0P7f8jjeA",
    "description": "Set '{{value}}' into {{outputParameter}}",
    "className": "SetParameterValue",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4398,
    "name": "Set weeks of a DateTime object",
    "summary": "Sets the weeks of a given DateTime object and returns the new DateTime object. Can be positive/negative.",
    "guid": "S_A89LHg0U6qqG4UMrdZKA",
    "description": "Set {{weeks}} weeks to {{originalDateTimeValue}}",
    "className": "Actions.Setters.SetWeeks",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9098,
    "name": "Set window position",
    "summary": "Set the position of the current window relative to the upper left corner of the screen",
    "guid": "SF-baknU00aY0HybpP5msw",
    "description": "Set window position to ({{x}},{{y}})",
    "className": "io.testproject.addons.web.window.SetWindowPosition",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9101,
    "name": "Set window size",
    "summary": "Set the size of the current window",
    "guid": "7dUz-B_UEEyf3F5EVJ9dXA",
    "description": "Set window size to ({{width}},{{height}})",
    "className": "io.testproject.addons.web.window.SetWindowSize",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4401,
    "name": "Set years of a DateTime object",
    "summary": "Sets the years of a given DateTime object and returns the new DateTime object. Can be positive/negative.",
    "guid": "83_xhigIW0y4HRVgqXqziw",
    "description": "Set {{years}} years to {{originalDateTimeValue}}",
    "className": "Actions.Setters.SetYears",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9774,
    "name": "Split string with regex",
    "summary": "Splits string around matches of given regular expression",
    "guid": "WB46ztRQDkCN9qtCPDZIXA",
    "description": "Splits {{sourceString}} around matches of given regular expression {{regex}} limited by {{limit}}",
    "className": "SplitStringWithRegex",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5130,
    "name": "SSH Connection and execute shell command",
    "summary": "",
    "guid": "MTPJNR9xHEGYyLI9E10GAg",
    "description": "Connect to the SSH-enabled server and execute shell commands",
    "className": "main.Addon.SSHConnection",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9804,
    "name": "String contains?",
    "summary": "Checks if the input string contains the given sequence",
    "guid": "Fqq_9nGBdk2VLY34af0P5w",
    "description": "Is {{inputString}} contains {{substring}}?",
    "className": "StringContains",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9789,
    "name": "String is empty?",
    "summary": "Checks if a given string is empty",
    "guid": "SfF29oPewkKQcZvexGkN-g",
    "description": "Checks if {{string}} is empty",
    "className": "IsStringEmpty",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9792,
    "name": "String starts with?",
    "summary": "Checks if string starts with given prefix",
    "guid": "oXEIgIgtAEWwBSLSTnSwKA",
    "description": "Checks if {{sourceString}} starts with {{prefix}} starting from {{offset}}",
    "className": "StringStartsWith",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 257,
    "name": "Switch columns",
    "summary": "Switches between two columns",
    "guid": "T5_irU102UeNDgUz98N6CA",
    "description": "Switch column {{firstColumn}} and {{secondColumn}}",
    "className": "SwitchColumns",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7269,
    "name": "Switch to default content",
    "summary": "",
    "guid": "wTfu244bwkSWJX2GcX-ZwA",
    "description": "Run Switch to default content",
    "className": "io.testproject.addons.element.web.SwitchToDefault",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7248,
    "name": "Switch to iFrame",
    "summary": "",
    "guid": "a_qR0quDX02wCi-IIE899g",
    "description": "Run Switch to iFrame",
    "className": "io.testproject.addons.element.web.SwitchToFrame",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9492,
    "name": "Switch to most recent tab opened",
    "summary": "",
    "guid": "HtZGhM2bAUGhKA_rzwgP2w",
    "description": "This action switches to the most recent tab opened",
    "className": "OpenMostRecentTab",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7272,
    "name": "Switch to parent frame",
    "summary": "",
    "guid": "A2_ahcaPLUuev3P_a0K8kw",
    "description": "Run Switch to parent frame",
    "className": "SwitchToParentFrame",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 132,
    "name": "Switch to window",
    "summary": "Switches to a different window with provided index",
    "guid": "3a7a12fb-66a4-47c2-aaf0-deeb7b1f748a",
    "description": "Switch to window {{index}}",
    "className": "io.testproject.agent.codeblocks.driver.SwitchToWindowHandleByIndex",
    "type": "NonElement",
    "source": "System",
    "labels": []
  },
  {
    "id": 7317,
    "name": "Take element screenshot",
    "guid": "sH-MFlvh7EGwnhmxSxbLpw",
    "description": "Takes a screenshot of an element and saves a copy to a local path",
    "className": "io.testproject.addon.imagecomparison.Actions.Web.TakeScreenshotWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7332,
    "name": "Take element screenshot to Dropbox",
    "guid": "FmoUJUPSfkulIT0RxL6FOg",
    "description": "Takes a screenshot of an element and saves a copy to Dropbox",
    "className": "io.testproject.addon.imagecomparison.Actions.DropBox.ScreenshotDropboxWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10129,
    "name": "Take full page screenshot with Robot",
    "summary": "Presses and releases multiple keys to Take full page screenshot on Chromium based browsers",
    "guid": "fRWo32Jh0US3h3RDU27vyQ",
    "description": "Take full page screenshot on Chromium based browsers",
    "className": "io.testproject.robot.operations.TakeFullPageScreenshot",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 2256,
    "name": "Take page screenshot",
    "summary": "Takes a screenshot of the entire page",
    "guid": "KrIYnQIU-0egIA3byQq-qQ",
    "description": "Take screenshot",
    "className": "io.testproject.Addon.Actions.Web.TakeScreenshotWeb",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9978,
    "name": "Test Connection (MongoDB)",
    "summary": "",
    "guid": "lI2sB0Cw5kG0y_KjwfjcFQ",
    "description": "Test the connection to a MongoDB instance",
    "className": "TestConnectionAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3757,
    "name": "Test SQL Connection (Db2 Database)",
    "summary": "",
    "guid": "YSuNzexu0k2naEmXUoFg0g",
    "description": "Test the connection to the IBM Db2 database",
    "className": "io.testproject.Action.TestSQLConnectionAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4907,
    "name": "Test SQL Connection (MSSQL Database)",
    "summary": "",
    "guid": "fWcYQXWr5Ua59j5RR-s4Kw",
    "description": "Test the connection to the MSSQL Database",
    "className": "io.testproject.Action.TestSQLConnectionAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9826,
    "name": "Test SQL Connection (MySQL)",
    "summary": "",
    "guid": "BIS-Gxhg7ESQjt46SO5_1Q",
    "description": "Run Test SQL Connection (MySQL)",
    "className": "io.testproject.addon.sql.tools.mysql.TestSQLConnectionAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3795,
    "name": "Test SQL Connection (Oracle Database)",
    "summary": "",
    "guid": "DMqYT8LwnUy42SO-batdng",
    "description": "Test the connection to the Oracle database",
    "className": "io.testproject.Action.TestSQLConnectionAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9831,
    "name": "Test SQL Connection (PostgreSQL)",
    "summary": "",
    "guid": "d4tf57XVMEuItXshR2_2jg",
    "description": "Run Test SQL Connection (PostgreSQL)",
    "className": "io.testproject.addon.sql.tools.postgresql.TestSQLConnectionAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5102,
    "name": "Test SQL connection (Teradata DataBase)",
    "summary": "",
    "guid": "mgHMVpcKbU2NDNAK5uawkQ",
    "description": "Test the connection to the TeraData database",
    "className": "TestConnectionAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 228,
    "name": "Toggle checkbox",
    "summary": "Toggles a checkbox by title",
    "guid": "nttUDaTKb0KyDn1XkZmDbw",
    "description": "Toggle checkbox with title {{title}}",
    "className": "ToggleByTitle",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9819,
    "name": "Transform character casing at index",
    "summary": "",
    "guid": "fA3-kvoMPUuy8ovjgUlk6A",
    "description": "Change character at {{index}} to {{lowerOrUpperCase}}",
    "className": "TransformCharacterAtIndex",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9795,
    "name": "Trim string",
    "summary": "Returns new string after removing any leading and trailing whitespace",
    "guid": "x_SM0HhCs0-NH-mOwhbRYw",
    "description": "Trim {{sourceString}}",
    "className": "TrimString",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4176,
    "name": "Type Random Phone Number",
    "guid": "puKY_V2iJ0KwPDLEsC4TUA",
    "description": "Run Type Random Phone Number",
    "className": "io.testproject.examples.sdk.actions.TypeRandomPhoneAction",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 58,
    "name": "Type text",
    "summary": "Sends key strokes to an input element",
    "guid": "6f94fdaa-0041-4265-b73b-ecfcbe702d66",
    "description": "Type {{keys}} in {{element}}",
    "className": "io.testproject.agent.codeblocks.driver.element.SendKeys",
    "quickAction": true,
    "type": "Element",
    "source": "System",
    "labels": []
  },
  {
    "id": 9904,
    "name": "Type text (if visible)",
    "guid": "_PKL_koWWkaH7f5nBaj7UA",
    "description": "Type {{text}} in {{element}} if visible",
    "className": "io.testproject.addon.TypeActions.TypeTextIfVisibleWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9299,
    "name": "Type text (using JavaScript)",
    "summary": "",
    "guid": "Z0JU97Txc0G-nl0HwPAucw",
    "description": "Type {{text}} in {{element}}",
    "className": "io.testproject.addon.jsactions.TypeTextAction",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3685,
    "name": "Type text with delay",
    "summary": "",
    "guid": "1Bdbr6RdM0a79TFCP4yagw",
    "description": "Type text to a TextField element with a delay between characters.",
    "className": "TypeTextWithControlledSpeed",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10114,
    "name": "Type text with Robot",
    "summary": "Presses and releases multiple keys to type input text",
    "guid": "_Jnpwo9ObEWkkNimb9LxEw",
    "description": "Type {{text}} using Robot",
    "className": "io.testproject.robot.operations.TypeText",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 260,
    "name": "Ungroup grid by column",
    "summary": "Ungroups grid by column",
    "guid": "Hf-wNFKHgkmCx3ezo3ZpTw",
    "description": "Ungroup grid by column with name {{name}}",
    "className": "UngroupByColumn",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10026,
    "name": "Update a specific cell in the Excel file",
    "summary": "Updates a Excel file at specified row and column",
    "guid": "TEZVf-pMr0GvZB_zbbnMCw",
    "description": "Update a specific cell in the Excel file",
    "className": "main.addon.updateCell",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9327,
    "name": "Update CSV file",
    "summary": "Updates a CSV file at specified row and column",
    "guid": "U35QdPfIV02YWAh1Rh-3Zg",
    "description": "Update the value of cell {{row}},{{col}} to {{updateValue}}",
    "className": "Actions.EditCSV",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9330,
    "name": "Update CSV file entire column",
    "summary": "Updates entire CSV file column",
    "guid": "zYiz3HW6sEi-LS9of_KiXg",
    "description": "Update the value of entire column {{col}} to {{updateValue}}",
    "className": "Actions.EditCSVCol",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9333,
    "name": "Update CSV file entire row",
    "summary": "Updates entire CSV file row",
    "guid": "b6oVDjjpk0ioMWwadiBVow",
    "description": "Update the value of entire row {{row}} to {{updateValue}}",
    "className": "Actions.EditCSVRow",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7525,
    "name": "Update Row with given Values (Google Sheets)",
    "summary": "Update a row with given data separated by a new line",
    "guid": "Fiwrq669CUaldje1wJsPLw",
    "description": "Update row {{row}} from column {{startColumn}} to {{endColumn}} with {{data}}",
    "className": "SheetsActions.Actions.UpdateRow",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7519,
    "name": "Update Value in Column and Row (Google Sheets)",
    "summary": "",
    "guid": "A5tB0aSuUkWgB0q4kKEzPg",
    "description": "Update ({{row}},{{column}}) to {{value}}",
    "className": "SheetsActions.Actions.UpdateColRow",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7522,
    "name": "Update value using Header and Row (Google Sheets)",
    "summary": "",
    "guid": "Yhxyngc_O02j-QFDrBdW9g",
    "description": "Update value at header: {{headerValue}} and row: {{row}} to {{value}}",
    "className": "SheetsActions.Actions.UpdateParamWithRowAndHeader",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10108,
    "name": "Upload a file with robot",
    "summary": "Presses and releases multiple keys to upload a file from a given path",
    "guid": "osNZzdky10uqMGrKNkMDIg",
    "description": "Upload file from {{path}}",
    "className": "io.testproject.robot.operations.UploadFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7566,
    "name": "Upload file",
    "summary": "",
    "guid": "vIixaIuPdESZy7F5a1d_Dg",
    "description": "Uploads a file to a given element with the 'file' type",
    "className": "UploadFileElementAction",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7482,
    "name": "Upload File (FTP)",
    "summary": "",
    "guid": "MsMPzcWYXkWcTGT2tk8LcQ",
    "description": "Upload {{source}} to {{destination}}",
    "className": "UploadFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7507,
    "name": "Upload File (Google Drive)",
    "summary": "",
    "guid": "qODtbPMx5USOMfnn0FSXEA",
    "description": "Upload {{filePath}} To Google Drive",
    "className": "DriveActions.Actions.UploadFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9468,
    "name": "Upload file from Dropbox",
    "summary": "Uploads a file from Dropbox",
    "guid": "LVG363esR0Kt16fsR7x02A",
    "description": "Upload {{remoteFile}} to input type element by XPATH",
    "className": "Actions.UploadFileFromDropBox",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7494,
    "name": "Upload File From DropBox (FTP)",
    "summary": "",
    "guid": "eoF9ExPZNUqS86tAWTq1kg",
    "description": "Upload {{source}} to {{destination}} on DropBox",
    "className": "UploadFileDropBox",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9465,
    "name": "Upload file to Dropbox",
    "summary": "Uploads a local file to Dropbox",
    "guid": "IeONQNriBEWIIER7TzvoeA",
    "description": "Upload file to {{uploadDirectory}} from {{localFile}}",
    "className": "Actions.UploadFileToDirectory",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7599,
    "name": "Upload file to input element",
    "guid": "lM7peumaDUuMkfToj7a8hg",
    "description": "Upload a file to an input element of type input",
    "className": "actions.UploadFileToInputElementAction",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7596,
    "name": "Upload File using XPath",
    "summary": "Upload a file to a specific element by providing the file's path and the element's XPath",
    "guid": "eZDGTCUB_0CGCjtIljG-aA",
    "description": "Upload a file to a specific element identifies by XPath",
    "className": "actions.UploadFileByXpathAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5552,
    "name": "Upload Folder",
    "summary": "",
    "guid": "76T-VCzVq0yoS1pIcmlbLQ",
    "description": "Upload all folder contents to {{folderPath}}",
    "className": "UploadFolder",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5549,
    "name": "Upload Multiple Files",
    "summary": "",
    "guid": "CAYem4chbE-prAYHXM9A3w",
    "description": "Upload multiple files, delimited location with commas.",
    "className": "UploadMultipleFiles",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9474,
    "name": "Upload Multiple Files from Dropbox",
    "summary": "Uploads Multiple Files from Dropbox",
    "guid": "ow2WDM3NWE2wYmOmap8xGw",
    "description": "Upload multiple files to input type element by XPATH",
    "className": "Actions.UploadMultipleFilesFromDropBox",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9471,
    "name": "Upload Multiple Files to Dropbox",
    "summary": "Uploads Multiple files to Dropbox",
    "guid": "G9wQLUWwvkKFFoQA618HKw",
    "description": "Upload Multiple files to {{uploadDirectory}} from {{localDirectory}}",
    "className": "Actions.UploadMultipleFilesToDirectory",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4687,
    "name": "Validate JSON array",
    "summary": "",
    "guid": "AOpcyy1zHEGGKc5Fx208fA",
    "description": "Validates if a JSON array contains specific given keys and values",
    "className": "ValidateJsonArray",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 4699,
    "name": "Validate JSON using schema",
    "summary": "Validates JSON value using a JSON schema",
    "guid": "bg67aBkXXUyBW7hDpLmpQg",
    "description": "Validates JSON value using a JSON schema, output the validation to a file if selected.",
    "className": "ValidateJsonSchema",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 3155,
    "name": "Validate text by page area (PDF)",
    "summary": "",
    "guid": "rItst_S4x0WN0RZ0gnNYNw",
    "description": "Validate text in PDF in a specific rectangular area",
    "className": "io.testproject.ContainsTextByArea",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10188,
    "name": "Validate YAML file",
    "summary": "Validates that an input file is a valid YAML",
    "guid": "tCfvFmsHi0Ozw4iHuffcMA",
    "description": "Validate {{yamlFilePath}} is a valid YAML file",
    "className": "Actions.ValidateYamlFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10191,
    "name": "Validate YAML input",
    "summary": "Validates that an input value is a valid YAML",
    "guid": "XYZIsb96e0WVziNHqUomGg",
    "description": "Validate {{yamlInput}} is a valid YAML",
    "className": "Actions.ValidateYamlInput",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 6496,
    "name": "Verify Network Call",
    "summary": "Check if a search parameter appears in network calls",
    "guid": "J4lCvAGjaECxWSUv6PjjeA",
    "description": "Check if {{SearchTerm}} appears in network calls",
    "className": "VerifyNetworkCall",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9038,
    "name": "Wait for alert presence",
    "summary": "Wait until the alert is displayed (default timeout is 0)",
    "guid": "vGrq7SjsTkeBy-MYhsUtFg",
    "description": "Is alert displayed?",
    "className": "io.testproject.addons.web.alert.WaitForAlertPresence",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10185,
    "name": "Wait for file to download",
    "summary": "Wait for the file to be downloaded or until the defined timeout",
    "guid": "Lr1oQDxKCUiNeax48es9ww",
    "description": "Wait for the file {{pathToFile}} to be downloaded up to {{timeOut}}",
    "className": "Actions.WaitForDownloadedFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 7546,
    "name": "Wait Until Color",
    "summary": "",
    "guid": "Y7h2FV99p0qpLRGvsVWmTw",
    "description": "Wait until element is a certain color",
    "className": "WaitUntilColorWeb",
    "type": "Element",
    "source": "Store",
    "labels": []
  },
  {
    "id": 10029,
    "name": "Wait Until The File is Downloaded",
    "summary": "This Action Waits Until The Downloaded File Appears In The System",
    "guid": "wRMZVK3Bnkmg_acgtZ93kw",
    "description": "Wait Until The File is Downloaded",
    "className": "main.addon.waitUntilFileDownloaded",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 9642,
    "name": "Write to File",
    "summary": "Writes to file",
    "guid": "QAGUrrkErk6dS7lseV2APg",
    "description": "Write to a file",
    "className": "WriteToFile",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  },
  {
    "id": 5710,
    "name": "Zip Files/Folders",
    "summary": "",
    "guid": "MwCIDrHXJkKp7sa6ehQ1Gw",
    "description": "Compress files and folders to {{destination}}",
    "className": "CompressAction",
    "type": "NonElement",
    "source": "Store",
    "labels": []
  }
]